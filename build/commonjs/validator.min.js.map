{"version":3,"sources":["validator.js"],"names":["getType","obj","Object","prototype","toString","call","isArray","TYPE_ARRAY","isFunction","TYPE_FUNCTION","getValue","htmlElement","TYPE_UNDEFINED","value","getAttribute","getLengthParams","paramString","errorString","matcher","result","match","TypeError","min","max","Infinity","getRangeParams","leftEqual","rightEqual","priority","v1","v2","priorityTable","test","parseConditionExpression","ruleString","c","wordQueue","exQueue","opStack","i","word","op","len","length","push","j","pop","executeChecker","type","values","isApi","parts","split","replace","checker","apiCheckers","defaultCheckers","this","cs","calculateConditionExpression","params","_params","slice","unshift","_values","k","apply","TYPE_BOOLEAN","ruleQueue","ruleStack","exp","s2","s1","result1","TYPE_STRING","result2","matrix","and","or","not","all","any","Validator","validations","vs","parseValidations","getField","v","vi","r","$field","fs","rs","rules","rj","_r","no","fail","yes","success","setRule","name","rule","callback","error","Error","TYPE_REGEXP","pass","removeRule","deepCheck","vfs","vrs","_pass","context","isEmpty","equal","empty","long","range","Number","registDefaultCheckers","is","arguments","registApiChecker","queue","err","console","mat","mat1","mat2","newMatrix","t1","t2","hasOwn","p","hasOwnProperty","||","&&","!","*","?","vprtt","add","remove","check","defaultMatchers","url","email","number","int","positive","negative","varName","nickName","QQ","ip","ipv4","ipv6","upperCase","lowerCase","something","ruleName","m","api","list","log","FormValidator","formOrSelector","$form","document","querySelectorAll","self","fields","$fields","constructor","exports"],"mappings":"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","file":"validator.min.js","sourcesContent":["/**\r\n * 布尔矩阵运算辅助函数\r\n */\r\nvar matrix = (function() {\r\n\r\n  var mat = {};\r\n\r\n  /**\r\n   * 求或\r\n   * mat1 = [true, false], mat2 = [false, true], mat1 || mat2 = [true, true]\r\n   * mat1 = [true, false], mat2 = false, mat1 || mat2 = [true, false]\r\n   * mat1 = false, mat2 = [true, false], mat1 || mat2 = [true, false]\r\n   * mat1 = true, mat2 = false, mat1 || mat2 = true\r\n   */\r\n  mat.or = function(mat1, mat2) {\r\n    var newMatrix = [];\r\n    var t1 = isArray(mat1), t2 = isArray(mat2);\r\n    if (t1 && t2) {\r\n      for (var i = 0; i < mat1.length; ++i) {\r\n        newMatrix[i] = mat1[i] || mat2[i];\r\n      }\r\n    } else if (t1) {\r\n      for (var i = 0; i < mat1.length; ++i) {\r\n        newMatrix[i] = mat1[i] || mat2;\r\n      }\r\n    } else if (t2) {\r\n      for (var i = 0; i < mat2.length; ++i) {\r\n        newMatrix[i] = mat2[i] || mat1;\r\n      }\r\n    } else {\r\n      newMatrix = mat1 || mat2;\r\n    }\r\n    return newMatrix;\r\n  };\r\n\r\n  /**\r\n   * 求与\r\n   * mat1 = [true, false], mat2 = [false, true], mat1 && mat2 = [false, false]\r\n   * mat1 = [true, false], mat2 = false, mat1 && mat2 = [false, false]\r\n   * mat1 = false, mat2 = [true, false], mat1 && mat2 = [false, false]\r\n   * mat1 = true, mat2 = false, mat1 && mat2 = false\r\n   */\r\n  mat.and = function(mat1, mat2) {\r\n    var newMatrix = [];\r\n    var t1 = isArray(mat1), t2 = isArray(mat2);\r\n    if (t1 && t2) {\r\n      for (var i = 0; i < mat1.length; ++i) {\r\n        newMatrix[i] = mat1[i] && mat2[i];\r\n      }\r\n    } else if (t1) {\r\n      for (var i = 0; i < mat1.length; ++i) {\r\n        newMatrix[i] = mat1[i] && mat2;\r\n      }\r\n    } else if (t2) {\r\n      for (var i = 0; i < mat2.length; ++i) {\r\n        newMatrix[i] = mat2[i] && mat1;\r\n      }\r\n    } else {\r\n      newMatrix = mat1 && mat2;\r\n    }\r\n    return newMatrix;\r\n  };\r\n\r\n  /**\r\n   * 求反\r\n   * mat = [true, false], !mat = [false, true]\r\n   * mat = true, !mat = false\r\n   */\r\n  mat.not = function(mat) {\r\n    var newMatrix = [];\r\n    if (isArray(mat)) {\r\n      for (var i = 0; i < mat.length; ++i) {\r\n        newMatrix[i] = !mat[i];\r\n      }\r\n    } else {\r\n      newMatrix = !mat;\r\n    }\r\n    return newMatrix;\r\n  };\r\n\r\n  mat.all = function(mat) {\r\n    var result = true;\r\n    if (isArray(mat)) {\r\n      for (var i = 0; i < mat.length; ++i) {\r\n        result = result && mat[i];\r\n      }\r\n    } else {\r\n      result = result && mat;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  mat.any = function(mat) {\r\n    var result = false;\r\n    if (isArray(mat)) {\r\n      for (var i = 0; i < mat.length; ++i) {\r\n        result = result || mat[i];\r\n      }\r\n    } else {\r\n      result = result || mat;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return mat;\r\n\r\n})();\r\n\n// shortcut\r\nvar hasOwn = function(p) {\r\n  return this.hasOwnProperty(p);\r\n};\r\n\r\n// Object Type Const String\r\nvar TYPE_STRING = '[object String]'\r\n  , TYPE_ARRAY = '[object Array]'\r\n  , TYPE_FUNCTION = '[object Function]'\r\n  , TYPE_REGEXP = '[object RegExp]'\r\n  , TYPE_BOOLEAN = '[object Boolean]'\r\n  , TYPE_UNDEFINED = 'undefined';\r\n\r\n/**\r\n * Utils: Get Object Type\r\n * @param {Object} obj\r\n * @return {String} object type\r\n */\r\nfunction getType(obj) {\r\n  return Object.prototype.toString.call(obj);\r\n};\r\n\r\n/**\r\n * Utils: isArray\r\n * @param {Object} obj\r\n * @return {Boolean} is Array or not\r\n */\r\nfunction isArray(obj) {\r\n  return getType(obj) === TYPE_ARRAY;\r\n};\r\n\r\n/**\r\n * Utils: isFunction\r\n * @param {Object} obj\r\n * @return {Boolean} is Function or not\r\n */\r\nfunction isFunction(obj) {\r\n  return getType(obj) === TYPE_FUNCTION;\r\n};\r\n\r\n/**\r\n * Utils: getValue\r\n * @param {HTMLElement} htmlElement\r\n * @return {String} value of htmlElement\r\n */\r\nfunction getValue(htmlElement) {\r\n  if (typeof htmlElement['value'] !== TYPE_UNDEFINED) {\r\n    return htmlElement.value || '';\r\n  } else if (typeof htmlElement['getAttribute'] !== TYPE_UNDEFINED) {\r\n    return htmlElement.getAttribute('data-value') || '';\r\n  } else {\r\n    return htmlElement || '';\r\n  }\r\n}\r\n\r\n/**\r\n * 解析length规则的参数\r\n * @param {String} paramString\r\n * @return {Array} params\r\n */\r\nfunction getLengthParams(paramString) {\r\n  var errorString = 'The parameters for length is illegal.';\r\n  paramString = paramString[0]; // HACK: 假设只有一个参数\r\n  var matcher = /\\s*([\\(\\[])\\s*(\\d+)?\\s*,\\s*(\\d+)?\\s*([\\)\\]])\\s*/; // 如果没有最小限制，最小限制为0；如果没有最大限制，最大限制为Infinite\r\n  var result = paramString.match(matcher);\r\n  if (result === null) {\r\n    throw new TypeError(errorString);\r\n  }\r\n  var min = result[2], max = result[3];\r\n  if (typeof min === TYPE_UNDEFINED) {\r\n    min = 0;\r\n  } else if (result[1] === '(') {\r\n    min = +min+1;\r\n  } else if (result[1] === '[') {\r\n    min = +min;\r\n  } else {\r\n    throw new TypeError(errorString);\r\n  }\r\n  if (typeof max === TYPE_UNDEFINED) {\r\n    max = Infinity;\r\n  } else if (result[4] === ')') {\r\n    max = +max-1;\r\n  } else if (result[4] === ']'){\r\n    max = +max;\r\n  } else {\r\n    throw new TypeError(errorString);\r\n  }\r\n  if (min !== min || max !== max) {\r\n    throw new TypeError(errorString);\r\n  }\r\n  return [min, max];\r\n};\r\n\r\n/**\r\n * 解析range规则的参数\r\n * @param {String} paramString\r\n * @return {Array} params\r\n * @throws {TypeError} 'The parameters for range is illegal.'\r\n */\r\nfunction getRangeParams(paramString) {\r\n  var errorString = 'The parameters for range is illegal.';\r\n  paramString = paramString[0];\r\n  var matcher = /\\s*([\\(\\[])\\s*((0|([\\+\\-]?[1-9]\\d*))(\\.[0-9]+)?)?\\s*,\\s*((0|([\\+\\-]?[1-9]\\d*))(\\.[0-9]+)?)?\\s*([\\)\\]])\\s*/; // 如果没有最小限制，最小限制为负无穷；如果没有最大限制，最大限制为正无穷\r\n  var result = paramString.match(matcher);\r\n  if (result === null) {\r\n    throw new TypeError(errorString);\r\n  }\r\n  var min = result[2], max = result[6], leftEqual, rightEqual;\r\n  if (typeof min === TYPE_UNDEFINED) {\r\n    min = -Infinity;\r\n  } else {\r\n    min = +min;\r\n  }\r\n  leftEqual = result[1] === '[';\r\n  if (typeof max === TYPE_UNDEFINED) {\r\n    max = Infinity;\r\n  } else {\r\n    max = +max;\r\n  }\r\n  rightEqual = result[10] === ']';\r\n  return [leftEqual, min, max, rightEqual];\r\n};\r\n\r\nvar priorityTable = {\r\n  \"||\": 0,\r\n  \"&&\": 1,\r\n  \"!\": 2,\r\n  \"*\": 2,\r\n  \"?\": 2\r\n};\r\n\r\nfunction priority(v1, v2) {\r\n  return priorityTable[v1] > priorityTable[v2] || priorityTable[v1] === priorityTable[v2] && !(/^(\\*|\\?|!)$/g.test(v1)) && !(/^(\\*|\\?|!)$/g.test(v2));\r\n}\r\n\r\n/**\r\n * parse rules 解析条件表达式，保存后缀队列\r\n * 条件表达式由两个部分组成\r\n * 1. 运算符 `&&`, `||`, `!`, `*`, `?`, `{`, `}`\r\n * 2. 规则字符串\r\n * @param {String} ruleString\r\n * @return {Array} rules\r\n */\r\nfunction parseConditionExpression(ruleString) { // 假设输入为： \"{A||!B}&&C\"\r\n  var wordQueue = []; // 词队列\r\n  var exQueue = []; // 后缀表达式队列\r\n  var opStack = []; // 操作符栈\r\n  // 1. 分词：wordQueue = ['{', 'A', '||', '!', 'B', '}', '&&', 'C']\r\n  var i = 0, c, word = '', op = '', len = ruleString.length;\r\n  while (i < len) {\r\n    c = ruleString[i++];\r\n    switch (c) {\r\n      case '{':\r\n      case '}':\r\n      case '!':\r\n      case '*':\r\n      case '?':\r\n        if (word.length > 0) {\r\n          wordQueue.push(word);\r\n        }\r\n        wordQueue.push(c);\r\n        word = '';\r\n        break;\r\n      case '&':\r\n      case '|':\r\n        if (c === op) {\r\n          if (word.length > 0) {\r\n            wordQueue.push(word);\r\n          }\r\n          wordQueue.push(op+op);\r\n          word = '';\r\n          op = '';\r\n        } else {\r\n          op += c;\r\n        }\r\n        break;\r\n      default:\r\n        word += c;\r\n    }\r\n  }\r\n  if (word.length > 0) {\r\n    wordQueue.push(word);\r\n  }\r\n  // 2. 将中缀转成后缀并输入后缀表达式栈：exQueue = ['A', 'B', '!', '||', 'C', '&&'];\r\n  i = 0;\r\n  len = wordQueue.length;\r\n  var j, pop;\r\n  while(i < len) {\r\n    c = wordQueue[i++];\r\n    switch (c) {\r\n      case '{':\r\n        opStack.push(c);\r\n        break;\r\n      case '||':\r\n      case '&&':\r\n      case '!':\r\n      case '*':\r\n      case '?':\r\n        j = opStack.length - 1;\r\n        while(j >= 0 && (/^(\\*|\\?|\\|\\||&&|!)$/g.test(opStack[j]))) {\r\n           // 1.如果栈顶操作符优先级比较大，就出栈\r\n           // 2.如果栈顶操作符优先级相等，且非单目运算符，就出栈\r\n          if (priority(opStack[j], c)) {\r\n            exQueue.push(opStack.pop());\r\n          } else {\r\n            break;\r\n          }\r\n          j--;\r\n        }\r\n        opStack.push(c);\r\n        break;\r\n      case '}':\r\n        j = opStack.length - 1;\r\n        while(j >= 0) {\r\n          pop = opStack.pop();\r\n          if (pop === '{') {\r\n            break;\r\n          }\r\n          exQueue.push(pop);\r\n          j--;\r\n        }\r\n        break;\r\n      default:\r\n        exQueue.push(c);\r\n    }\r\n  }\r\n  if (opStack.length > 0) {\r\n    j = opStack.length - 1;\r\n    while(j >= 0) {\r\n      pop = opStack.pop();\r\n      if (pop === '{') {\r\n        break;\r\n      }\r\n      exQueue.push(pop);\r\n      j--\r\n    }\r\n  }\r\n  return exQueue;\r\n}\r\n\r\n/**\r\n * execute checker\r\n * @param {String} type\r\n * @param {Array} values\r\n * @param {Boolean} isApi\r\n * @return {Boolean} result\r\n */\r\nfunction executeChecker(type, values, isApi) {\r\n  var parts = type.split(':');\r\n  type = parts[0].replace(/length/i, 'long');\r\n  var checker = isApi ? apiCheckers[type] || defaultCheckers[type] : this.cs[type] || apiCheckers[type] || defaultCheckers[type];\r\n\r\n  var result;\r\n  switch(getType(checker)) {\r\n    case TYPE_ARRAY:\r\n      result = calculateConditionExpression.call(this, checker, values, isApi);\r\n      break;\r\n    case TYPE_FUNCTION:\r\n      var params;\r\n      var _params = parts.slice(1);\r\n      switch (type) {\r\n        case 'long':\r\n          params = getLengthParams(_params);\r\n          break;\r\n        case 'range':\r\n          params = getRangeParams(_params);\r\n          break;\r\n        default:\r\n          params = _params;\r\n      }\r\n      if (isApi) {\r\n        params.unshift(values);\r\n      } else {\r\n        var _values  = [];\r\n        if (values !== null) {\r\n          for (var k = 0; k < values.length; ++k) {\r\n            _values.push(getValue(values[k]));\r\n          }\r\n        }\r\n        params.unshift(_values);\r\n      }\r\n      result = checker.apply(null, params);\r\n      break;\r\n    case TYPE_BOOLEAN:\r\n      result = checker;\r\n      break;\r\n    default:\r\n      throw new TypeError('Checker for rule ' + parts[0] + ' must be a Function.');\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * 计算条件表达式（必须是已经解析成后缀表达式）\r\n * @param {Array} ruleQueue\r\n * @param {Array} values\r\n * @return {Boolean} result\r\n */\r\nfunction calculateConditionExpression(ruleQueue, values, isApi) {\r\n\r\n  var ruleStack = [];\r\n  for (var k = 0; k < ruleQueue.length; ++k) {\r\n    var exp = ruleQueue[k];\r\n    switch (exp) {\r\n      case '&&':\r\n        var s2 = ruleStack.pop()\r\n          , s1 = ruleStack.pop();\r\n        var result1 = getType(s1) === TYPE_STRING ? executeChecker.call(this, s1, values, isApi) : s1;\r\n        var result2 = getType(s2) === TYPE_STRING ? executeChecker.call(this, s2, values, isApi) : s2;\r\n        var result = matrix.and(result1, result2);\r\n        ruleStack.push(result);\r\n        break;\r\n      case '||':\r\n        var s2 = ruleStack.pop()\r\n          , s1 = ruleStack.pop();\r\n        var result1 = getType(s1) === TYPE_STRING ? executeChecker.call(this, s1, values, isApi) : s1;\r\n        var result2 = getType(s2) === TYPE_STRING ? executeChecker.call(this, s2, values, isApi) : s2;\r\n        var result = matrix.or(result1, result2);\r\n        ruleStack.push(result);\r\n        break;\r\n      case '!':\r\n        var s1 = ruleStack.pop();\r\n        var result = matrix.not(getType(s1) === TYPE_STRING ? executeChecker.call(this, s1, values, isApi) : s1);\r\n        ruleStack.push(result);\r\n        break;\r\n      case '*':\r\n        var s1 = ruleStack.pop();\r\n        var result = matrix.all(getType(s1) === TYPE_STRING ? executeChecker.call(this, s1, values, isApi) : s1);\r\n        ruleStack.push(result);\r\n        break;\r\n      case \"?\":\r\n        var s1 = ruleStack.pop();\r\n        var result = matrix.any(getType(s1) === TYPE_STRING ? executeChecker.call(this, s1, values, isApi) : s1);\r\n        ruleStack.push(result);\r\n        break;\r\n      default:\r\n        ruleStack.push(exp);\r\n    }\r\n  }\r\n  var pop = ruleStack.pop();\r\n  return getType(pop) === TYPE_STRING ? executeChecker.call(this, pop, values, isApi) : pop;\r\n\r\n}\r\n\n/**\r\n * @constructor\r\n * @class Validator\r\n * @param {Array|Object} validations\r\n */\r\nfunction Validator(validations) {\r\n  validations = validations || [];\r\n  this.cs = {};\r\n  this.vs = parseValidations(validations);\r\n}\r\n\r\nfunction parseValidations(validations, getField) {\r\n  validations = getType(validations) === TYPE_ARRAY ? validations : [validations];\r\n  var v = [];\r\n  for (var i = 0; i < validations.length; ++i) {\r\n    var vi = validations[i];\r\n    var r = {};\r\n    var $field = getField ? getField(vi['field']) : vi['field'];\r\n    r.fs = !$field ? null : (isArray($field) ? $field : [$field]);\r\n    r.rs = [];\r\n    var rules = isArray(vi.rules) ? vi.rules : [vi.rules];\r\n    for (var j = 0; j < rules.length; ++j) {\r\n      var rj = rules[j];\r\n      var _r = {};\r\n      _r.if = parseConditionExpression(rj.if);\r\n      _r.no = !rj['fail'] ? false : rj.fail;\r\n      _r.yes = !rj['success'] ? false : parseValidations(rj.success);\r\n      r.rs.push(_r);\r\n    }\r\n    v.push(r);\r\n  }\r\n  return v;\r\n}\r\n\r\nfunction setRule(name, rule) {\r\n  var checker = rule;\r\n  var callback;\r\n  switch (getType(checker)) {\r\n    case TYPE_BOOLEAN:\r\n    case TYPE_FUNCTION:\r\n      callback = checker;\r\n      break;\r\n    case TYPE_STRING:\r\n      try {\r\n        callback = parseConditionExpression(checker);\r\n      } catch(error) {\r\n        throw new Error(\"Cannot parse condition expression.\");\r\n      }\r\n      break;\r\n    case TYPE_REGEXP:\r\n      callback = function(values) {\r\n        var pass = true;\r\n        if (isArray(values)) {\r\n          for (var i = 0, len = values.length; i < len; ++i) {\r\n            if (!checker.test(values[i])) {\r\n              pass = false;\r\n              break;\r\n            }\r\n          }\r\n        } else {\r\n          if (!rule.rule.test(values)) {\r\n            pass = false;\r\n          }\r\n        }\r\n        return pass;\r\n      };\r\n      break;\r\n    default:\r\n      throw new TypeError('Rule type not support.');\r\n  }\r\n  this.cs[name] = callback;\r\n}\r\n\r\nfunction removeRule(rule) {\r\n  if (typeof this.cs[rule] !== TYPE_UNDEFINED) {\r\n    delete this.cs[rule];\r\n  }\r\n}\r\n\r\nvar vprtt = Validator.prototype;\r\n\r\n/**\r\n * @method .add(rules)\r\n * @param {Object} rules\r\n * @return this\r\n * @description 添加自定义规则，可以是正则，函数或者规则表达式\r\n */\r\nvprtt.add = function(rules) {\r\n  for (var name in rules) {\r\n    if (hasOwn.call(rules, name)) {\r\n      setRule.call(this, name, rules[name]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * @method .remove(rules)\r\n * @param {Array|String} rules\r\n * @return this\r\n * @description 删除自定义规则\r\n */\r\nvprtt.remove = function(rules) {\r\n  if (isArray(rules)) {\r\n    for (var i = 0; i < rules.length; ++i) {\r\n      removeRule.call(this, rules[i]);\r\n    }\r\n  } else {\r\n    removeRule.call(this, rules);\r\n  }\r\n  return this\r\n};\r\n\r\nfunction deepCheck(validations) {\r\n  var pass = true;\r\n  for (var i = 0; i < validations.length; ++i) {\r\n    var vi = validations[i];\r\n    var vfs = vi.fs, vrs = vi.rs;\r\n    for (var j = 0; j < vrs.length; ++j) {\r\n      var rj = vrs[j];\r\n      var _pass = calculateConditionExpression.call(this, rj.if, vfs, false);\r\n      _pass = matrix.all(_pass);\r\n      if (!_pass) {\r\n        var context = vfs.length < 2 ? vfs[0] : vfs;\r\n        if (rj.no) {\r\n          pass = false;\r\n          rj.no.call(context);\r\n        }\r\n        break;\r\n      } else if (rj.yes) {\r\n        pass = deepCheck.call(this, rj.yes);\r\n      }\r\n    }\r\n    if (!pass) break;\r\n  }\r\n  return pass;\r\n}\r\n\r\n/**\r\n * @method .check()\r\n * @return {Boolean} pass or not\r\n */\r\nvprtt.check = function() {\r\n  return deepCheck.call(this, this.vs);\r\n};\r\n\n// checker函数的第一个参数总是一个数组，这个数组就是待检测的字符串数组\r\n// 从第二个参数起，每个checker函数带有不同长度的参数列表。例如，empty函数的参数列表长度为0，long函数的参数列表长度为2（暂时，有待改进）\r\nvar defaultCheckers = {};\r\n\r\nvar defaultMatchers = {\r\n  // url\r\n  url: /^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/\r\n  // email\r\n  , email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i\r\n  // 数值型\r\n  , number: /^(0|([\\+\\-]?[1-9]\\d*))(\\.[0-9]+)?$/\r\n  // 整型\r\n  , int: /^(0|([\\+\\-]?[1-9]\\d*))$/\r\n  // 正整数\r\n  , positive: /^\\+?[1-9]\\d*$/\r\n  // 负整数\r\n  , negative: /^\\-[1-9]\\d*$/\r\n  // 变量名：只能包含英文字母/数字/下划线，且不能以数字开头\r\n  , varName: /^[a-zA-Z_][a-zA-Z0-9_]*$/\r\n  // 昵称：只能包含中文/英文字母/数字/下划线，且不能以数字开头\r\n  , nickName: /^[\\u4E00-\\u9FA5\\uF900-\\uFA2Da-zA-Z_][\\u4E00-\\u9FA5\\uF900-\\uFA2Da-zA-Z0-9_]*$/\r\n  // QQ\r\n  , QQ: /^[1-9][0-9]{4,}$/\r\n  // 身份证号\r\n  // 手机号\r\n  // 电话号码\r\n  // 邮政编码\r\n  // IP\r\n  , ip: /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/\r\n  // IPV4\r\n  , ipv4: /^(?:(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])$/\r\n  // IPV6\r\n  , ipv6: /^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/\r\n  // 全大写\r\n  , upperCase: /^[A-Z]+$/\r\n  // 全小写\r\n  , lowerCase: /^[a-z]+$/\r\n  // 空限制\r\n  , empty: empty\r\n  // 相等\r\n  , equal: equal\r\n  // 长度范围限制\r\n  , long: long\r\n  // 数值大小限制\r\n  , range: range\r\n\r\n  , is: function(values, something) {\r\n    var result;\r\n    if (isArray(values)) {\r\n      result = [];\r\n      for (var i = 0; i < values.length; ++i) {\r\n        result.push(values[i] === something);\r\n      }\r\n    } else {\r\n      result = values === something;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  , not: function(values, something) {\r\n    var result;\r\n    if (isArray(values)) {\r\n      result = [];\r\n      for (var i = 0; i < values.length; ++i) {\r\n        result.push(values[i] !== something);\r\n      }\r\n    } else {\r\n      result = values !== something;\r\n    }\r\n    return result;\r\n  }\r\n\r\n};\r\n\r\n/**\r\n * 判断值是否为空\r\n * @param {Object} value\r\n * 如果value为null|undefined|空字符串，就判断为真，否则判断为假\r\n * @return {Boolean} 是否为空\r\n */\r\nfunction isEmpty(value) {\r\n  return value === null || typeof value === TYPE_UNDEFINED || value === '';\r\n}\r\n\r\n/**\r\n * defaults.checkers: equal check\r\n * @param {Array} values\r\n * @return {Boolean} equal or not\r\n */\r\nfunction equal(values) {\r\n  if (!isArray(values)) {\r\n    return false;\r\n  }\r\n  var equal = true;\r\n  for (var i = 0; i < values.length - 1; ++i) {\r\n    if (values[i] !== values[i+1]) {\r\n      equal = false;\r\n      break;\r\n    }\r\n  }\r\n  return equal;\r\n}\r\n\r\n/**\r\n * defaults.checkers: empty check\r\n * @param {String|Array} values\r\n * @return {Boolean|Array} 如果传入数组，就返回布尔数组；如果传入字符串，就返回布尔值\r\n */\r\nfunction empty(values) {\r\n  var result;\r\n  if (isArray(values)) {\r\n    result = [];\r\n    for (var i = 0; i < values.length; ++i) {\r\n      result.push(isEmpty(values[i]));\r\n    }\r\n  } else {\r\n    result = isEmpty(values);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * defaults.checkers: length check\r\n * @param {Array|String} values\r\n * @param {Number} min\r\n * @param {Number} max\r\n * @return {Array|Boolean} 如果传入数组，就返回布尔矩阵；如果传入字符串，就返回布尔值\r\n */\r\nfunction long(values, min, max) {\r\n  var result, length;\r\n  min = min || -Infinity;\r\n  max = max || Infinity;\r\n  if (isArray(values)) {\r\n    result = [];\r\n    for (var i = 0; i < values.length; ++i) {\r\n      length = values[i].length;\r\n      result.push(length >= min && length <= max);\r\n    }\r\n  } else {\r\n    length = values.length;\r\n    result = length >= min && length <= max;\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * defaults.check: number range check\r\n * 这个函数和long类似，但是不是用来限制长度的，而是用来限制数值本身的\r\n * @param {Array|String} values\r\n * @param {Boolean} leftEqual 是否大于等于\r\n * @param {Number} min\r\n * @param {Number} max\r\n * @param {Boolean} rightEqual 是否小于等于\r\n * @return {Array|Boolean} 如果传入数组，就返回布尔矩阵；否则就返回布尔值\r\n */\r\nfunction range(values, leftEqual, min, max, rightEqual) {\r\n  var result;\r\n  if (isArray(values)) {\r\n    result = [];\r\n    for (var i = 0; i < values.length; ++i) {\r\n      var value = Number(values[i]);\r\n      result.push((leftEqual && value >= min || !leftEqual && value > min) && (rightEqual && value <= max || !rightEqual && value < max));\r\n    }\r\n  } else {\r\n    values = Number(values);\r\n    result = (leftEqual && values >= min || !leftEqual && values > min) && (rightEqual && values <= max || !rightEqual && values < max);\r\n  }\r\n  return result;\r\n}\r\n\nvar apiCheckers = {};\r\n\r\n/**\r\n * @static Validator.is\r\n * 优先级： api.checkers > defaults.checkers\r\n * @param {String} ruleName\r\n * @param {Array|String} values\r\n * @return {Boolean} is or not\r\n */\r\nvar is = Validator.is = function(ruleName, values) {\r\n  return executeChecker.call(null, ruleName, values, true);\r\n};\r\n\r\n/**\r\n * @static Validator.not\r\n * @param {String} ruleName\r\n * @param {Array|String} values\r\n * @return {Boolean} is or not\r\n */\r\nvar not = Validator.not = function(ruleName, values) {\r\n  return matrix.not(is(ruleName, values));\r\n};\r\n\r\nvar any = Validator.any = function(ruleName, values) {\r\n  return matrix.any(is(ruleName, values));\r\n};\r\n\r\nvar all = Validator.all = function(ruleName, values) {\r\n  return matrix.all(is(ruleName, values));\r\n};\r\n\r\n/**\r\n * This helper helps to regist default checkers, `is` api and `not` api\r\n * 所有的defaultCheckers都是函数\r\n * @param {String} name\r\n * @param {Object} matcher\r\n */\r\nfunction registDefaultCheckers(name, matcher) {\r\n  var callback;\r\n  switch(getType(matcher)) {\r\n    case TYPE_REGEXP:\r\n      callback = function(value) {\r\n        var result;\r\n        if (isArray(value)) {\r\n          result = [];\r\n          for (var i = 0; i < value.length; ++i) {\r\n            result.push(matcher.test(value[i]));\r\n          }\r\n        } else {\r\n          result = matcher.test(value);\r\n        }\r\n        return result;\r\n      };\r\n      break;\r\n    case TYPE_FUNCTION:\r\n      callback = matcher;\r\n      break;\r\n    default:\r\n      throw new TypeError('Default Matcher Type Error.');\r\n  }\r\n  defaultCheckers[name] = callback;\r\n  is[name] = callback;\r\n  not[name] = function() {\r\n    return matrix.not(callback.apply(null, arguments));\r\n  };\r\n  all[name] = function() {\r\n    return matrix.all(callback.apply(null, arguments));\r\n  };\r\n  any[name] = function() {\r\n    return matrix.any(callback.apply(null, arguments));\r\n  };\r\n}\r\n\r\nfor (var m in defaultMatchers) {\r\n  if (hasOwn.call(defaultMatchers, m)) {\r\n    registDefaultCheckers(m, defaultMatchers[m]);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {String} type\r\n * @param {String|RegExp|Function} checker\r\n * checker可以是字符串，正则表达式，或者函数\r\n * 当checker是字符串时，表示基于内建规则组合（表达式）的新规则\r\n * 当checker是正则表达式时，表示一条规则，它必须通过该正则表达式的完全匹配\r\n * This function may throw a `TypeError` if checker's type is not support.\r\n */\r\nfunction registApiChecker(type, checker) {\r\n  var callback;\r\n  switch(getType(checker)) {\r\n    case TYPE_STRING:\r\n      // 解析规则，生成的是一个后缀表达式（队列）\r\n      // 只能使用defaultCheckers，如果defaultCheckers里没有，就抛出异常\r\n      // 此处不直接生成checker函数，而是把表达式解析成后缀形式（队列存储），在验证的时候（执行.check()或者Validator.is()/Validator.not()时）再执行表达式运算\r\n      var queue;\r\n      try {\r\n        queue = parseConditionExpression(checker);\r\n      } catch(err) {\r\n        console.error('无法解析的条件表达式');\r\n        throw new Error(err);\r\n      }\r\n      callback = queue;\r\n      break;\r\n    case TYPE_REGEXP:\r\n      callback = function(value) {\r\n        var result;\r\n        if (isArray(value))  {\r\n          result = [];\r\n          for (var i = 0; i < value.length; ++i) {\r\n            result.push(checker.test(value[i]));\r\n          }\r\n        } else {\r\n          result = checker.test(value);\r\n        }\r\n        return result;\r\n      }\r\n      break;\r\n    case TYPE_FUNCTION:\r\n      callback = checker;\r\n      break;\r\n    default:\r\n      throw new TypeError('API Checker Type Error.');\r\n  }\r\n  apiCheckers[type] = callback;\r\n}\r\n\r\n/**\r\n * @static Validator.api(rules)\r\n * @param {Object} rules\r\n * @return Validator\r\n */\r\nValidator.api = function(rules) {\r\n\r\n  for (var name in rules) {\r\n    if (hasOwn.call(rules, name)) {\r\n      registApiChecker.call(this, name, rules[name]);\r\n    }\r\n  }\r\n  return this;\r\n\r\n};\r\n\r\n// just for test\r\nValidator.api.list = function() {\r\n  console.log(apiCheckers);\r\n};\r\n\n// 暂时不做扩展：没有必要做扩展了，已经够用了\r\n\n/**\r\n * @constructor\r\n * @class FormValidator\r\n * @extends Validator\r\n * @param {HTMLElement|String} formOrSelector\r\n * @param {Object|Array} validations\r\n * TODO: 增加对checkbox,radio,select的支持\r\n */\r\nvar FormValidator = function(formOrSelector, validations) {\r\n  validations = validations || [];\r\n  this.$form = getType(formOrSelector) === TYPE_STRING ? document.querySelectorAll(formOrSelector)[0] : formOrSelector;\r\n  this.cs = {};\r\n  var self = this;\r\n  this.vs = parseValidations(validations, function(fields) {\r\n    if (!fields) return fields;\r\n    var $fields = [];\r\n    if (isArray(fields)) {\r\n      for (var i = 0; i < fields.length; ++i) {\r\n        var $field = self.$form.querySelectorAll('[name=' + fields[i] + ']')[0] || self.$form.querySelectorAll('[data-name=' + fields[i] + ']')[0]\r\n        $fields.push($field);\r\n      }\r\n    } else {\r\n      var $field = self.$form.querySelectorAll('[name=' + fields + ']')[0] || self.$form.querySelectorAll('[data-name=' + fields + ']')[0];\r\n      $fields.push($field);\r\n    }\r\n    return $fields;\r\n  });\r\n};\r\n\r\nFormValidator.prototype = new Validator();\r\nFormValidator.prototype.constructor = FormValidator;\r\n\r\n/**\r\n * @method .check()\r\n * @override Validator.prototype.check()\r\n * @return {Boolean} pass or not\r\n * TODO: 增加对checkbox,radio,select的支持\r\n */\r\nFormValidator.prototype.check = function() {\r\n  return Validator.prototype.check.call(this, this.$form);\r\n};\r\n\nexports.Validator = Validator;\r\n\r\nexports.FormValidator = FormValidator;\r\n"],"sourceRoot":"/source/"}