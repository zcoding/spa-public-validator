!function(t){"function"==typeof define&&define.cmd?define(function(r,e,n){t(e)}):t(window)}(function(t){var r=Object.prototype.toString,e={};e.isArray=function(t){return"[object Array]"===r.call(t)},e.isFunction=function(t){return"[object Function]"===r.call(t)},e.getValue=function(t){return"undefined"==typeof t.value?t.getAttribute("data-value")||"":t.value};var n=function(){},o=n.prototype;o.add=function(t){return this},o.createFormValidator=function(t,r){return new i(t,r)};var i=function(t,r){this.$form="string"==typeof t?document.querySelectorAll(t)[0]:t,this.validations=[],e.isArray(r)||(r=[r]);for(var n=0,o=r.length;o>n;++n){for(var i=r[n].field,a=[],u=0;u<i.length;++u)a.push(this.$form.querySelectorAll("[name="+i[u]+"]")[0]);var c=r[n].rules;c=e.isArray(c)?c:[c],this.validations.push({$field:a,rules:c})}};i.prototype=new n,i.prototype.constructor=i,i.prototype.check=function(){for(var t=this.$form,r=this.validations,n=!0,o=0,i=r.length;i>o;++o){for(var u=r[o].$field,c=r[o].rules,f=0;f<c.length;++f){var l=c[f],s=a.checkers[l.type];if(!e.isFunction(s))throw new TypeError("Checker for rule "+l.type+" must be a Function.");var d=e.getValue(u);if(!s(d)){l.fail.call(u,t),n=!1;break}}if(!n)break}return n};var a={},u={};u.notEmpty=function(t){return t&&""!==t},a.checkers=u;var c={},f={};n.is=c,n.not=f,t.Validator=n});
//# sourceMappingURL=spa-public-validator.min.js.map