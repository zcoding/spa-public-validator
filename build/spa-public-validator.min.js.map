{"version":3,"sources":["spa-public-validator.js"],"names":["factory","define","cmd","require","exports","module","window","objectType","Object","prototype","toString","utils","isArray","obj","call","isFunction","getValue","HTMLElement","value","getAttribute","Validator","vprtt","add","rules","this","createFormValidator","formOrSelector","validations","FormValidator","$form","document","querySelectorAll","i","len","length","fields","field","$field","j","push","constructor","check","pass","rule","checker","defaults","checkers","type","TypeError","fail","notEmpty","api","_api","is","not"],"mappings":"CAAC,SAASA,GACc,kBAAXC,SAAyBA,OAAOC,IACzCD,OAAO,SAASE,EAASC,EAASC,GAChCL,EAAQI,KAGVJ,EAAQM,SAEV,SAASF,GAEX,GAAIG,GAAaC,OAAOC,UAAUC,SAM9BC,IAEJA,GAAMC,QAAU,SAASC,GACvB,MAAgC,mBAAzBN,EAAWO,KAAKD,IAGzBF,EAAMI,WAAa,SAASF,GAC1B,MAAgC,sBAAzBN,EAAWO,KAAKD,IAGzBF,EAAMK,SAAW,SAASC,GACxB,MAAiC,mBAAtBA,GAAYC,MACdD,EAAYE,aAAa,eAAiB,GAE1CF,EAAYC,MAQvB,IAAIE,GAAY,aAEZC,EAAQD,EAAUX,SAOtBY,GAAMC,IAAM,SAASC,GACnB,MAAOC,OAQTH,EAAMI,oBAAsB,SAASC,EAAgBC,GACnD,MAAO,IAAIC,GAAcF,EAAgBC,GAS3C,IAAIC,GAAgB,SAASF,EAAgBC,GAEzCH,KAAKK,MADuB,gBAAnBH,GACII,SAASC,iBAAiBL,GAAgB,GAE1CA,EAEfF,KAAKG,eACAhB,EAAMC,QAAQe,KACjBA,GAAeA,GAEjB,KAAK,GAAIK,GAAI,EAAGC,EAAMN,EAAYO,OAAYD,EAAJD,IAAWA,EAAG,CAGtD,IAAK,GAFDG,GAASR,EAAYK,GAAGI,MACxBC,KACKC,EAAI,EAAGA,EAAIH,EAAOD,SAAUI,EACnCD,EAAOE,KAAKf,KAAKK,MAAME,iBAAiB,SAAWI,EAAOG,GAAK,KAAK,GAEtE,IAAIf,GAAQI,EAAYK,GAAGT,KAC3BA,GAAQZ,EAAMC,QAAQW,GAASA,GAASA,GACxCC,KAAKG,YAAYY,MACfF,OAAQA,EACRd,MAAOA,KAKbK,GAAcnB,UAAY,GAAIW,GAC9BQ,EAAcnB,UAAU+B,YAAcZ,EAMtCA,EAAcnB,UAAUgC,MAAQ,WAI9B,IAAK,GAHDZ,GAAQL,KAAKK,MACbF,EAAcH,KAAKG,YACnBe,GAAO,EACFV,EAAI,EAAGC,EAAMN,EAAYO,OAAYD,EAAJD,IAAWA,EAAG,CAGtD,IAAK,GAFDK,GAASV,EAAYK,GAAGK,OACxBd,EAAQI,EAAYK,GAAGT,MAClBe,EAAI,EAAGA,EAAIf,EAAMW,SAAUI,EAAG,CACrC,GAAIK,GAAOpB,EAAMe,GACbM,EAAUC,EAASC,SAASH,EAAKI,KACrC,KAAKpC,EAAMI,WAAW6B,GACpB,KAAM,IAAII,WAAU,oBAAsBL,EAAKI,KAAO,uBAExD,IAAI7B,GAAQP,EAAMK,SAASqB,EAC3B,KAAKO,EAAQ1B,GAAQ,CACnByB,EAAKM,KAAKnC,KAAKuB,EAAQR,GACvBa,GAAO,CACP,QAGJ,IAAKA,EAAM,MAEb,MAAOA,GAGT,IAoBIG,MAEAC,IAEJA,GAASI,SAAW,SAAShC,GAC3B,MAAOA,IAAmB,KAAVA,GAGlB2B,EAASC,SAAWA,CAEpB,IAAIK,MAAUC,IAIdhC,GAAUiC,GAAKF,EAEf/B,EAAUkC,IAAMF,EAGhBhD,EAAQgB,UAAYA","file":"spa-public-validator.min.js","sourcesContent":["(function(factory) {\r\n  if (typeof define === 'function' && define.cmd) {\r\n    define(function(require, exports, module) {\r\n      factory(exports);\r\n    });\r\n  } else {\r\n    factory(window)\r\n  }\r\n}(function(exports) {\r\n\nvar objectType = Object.prototype.toString;\r\n\r\nvar hasOwn = function(p) {\r\n  return this.hasOwnProperty(p);\r\n};\r\n\r\nvar utils = {};\r\n\r\nutils.isArray = function(obj) {\r\n  return objectType.call(obj) === '[object Array]';\r\n};\r\n\r\nutils.isFunction = function(obj) {\r\n  return objectType.call(obj) === '[object Function]';\r\n};\r\n\r\nutils.getValue = function(HTMLElement) {\r\n  if (typeof HTMLElement.value === 'undefined') {\r\n    return HTMLElement.getAttribute('data-value') || '';\r\n  } else {\r\n    return HTMLElement.value;\r\n  }\r\n};\r\n\n/**\r\n * @class Validator\r\n * @constructor\r\n */\r\nvar Validator = function() {};\r\n\r\nvar vprtt = Validator.prototype;\r\n\r\n/**\r\n * .add()\r\n * @param {Object} rules\r\n * @return this\r\n */\r\nvprtt.add = function(rules) {\r\n  return this;\r\n};\r\n\r\n/**\r\n * .createFormValidator()\r\n * @param {Element|String} form|selector\r\n * @param {Object} validations\r\n */\r\nvprtt.createFormValidator = function(formOrSelector, validations) {\r\n  return new FormValidator(formOrSelector, validations);\r\n};\r\n\r\n/**\r\n * @class FormValidator extends Validator\r\n * @constructor\r\n * @param {HTMLElement|String} formOrSelector\r\n * @param {Object|Array} validations\r\n */\r\nvar FormValidator = function(formOrSelector, validations) {\r\n  if (typeof formOrSelector === 'string') {\r\n    this.$form = document.querySelectorAll(formOrSelector)[0];\r\n  } else {\r\n    this.$form = formOrSelector;\r\n  }\r\n  this.validations = [];\r\n  if (!utils.isArray(validations)) {\r\n    validations = [validations];\r\n  }\r\n  for (var i = 0, len = validations.length; i < len; ++i) {\r\n    var fields = validations[i].field;\r\n    var $field = [];\r\n    for (var j = 0; j < fields.length; ++j) {\r\n      $field.push(this.$form.querySelectorAll('[name=' + fields[j] + ']')[0]);\r\n    }\r\n    var rules = validations[i].rules;\r\n    rules = utils.isArray(rules) ? rules : [rules];\r\n    this.validations.push({\r\n      $field: $field,\r\n      rules: rules\r\n    });\r\n  }\r\n}\r\n\r\nFormValidator.prototype = new Validator();\r\nFormValidator.prototype.constructor = FormValidator;\r\n\r\n/**\r\n * .check()\r\n * @return {Boolean} pass or not\r\n */\r\nFormValidator.prototype.check = function() {\r\n  var $form = this.$form;\r\n  var validations = this.validations;\r\n  var pass = true;\r\n  for (var i = 0, len = validations.length; i < len; ++i) {\r\n    var $field = validations[i].$field;\r\n    var rules = validations[i].rules;\r\n    for (var j = 0; j < rules.length; ++j) {\r\n      var rule = rules[j];\r\n      var checker = defaults.checkers[rule.type];\r\n      if (!utils.isFunction(checker)) {\r\n        throw new TypeError('Checker for rule ' + rule.type + ' must be a Function.');\r\n      }\r\n      var value = utils.getValue($field);\r\n      if (!checker(value)) {\r\n        rule.fail.call($field, $form);\r\n        pass = false;\r\n        break;\r\n      }\r\n    }\r\n    if (!pass) break;\r\n  }\r\n  return pass;\r\n};\r\n\nvar rules = ['empty', 'length', 'email', 'url', 'yes']; // 内置规则\n\nvar matchers = {\n  ////////// 正则匹配\n  url: /^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/,\n  email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\n  ////////// 非正则匹配\n  empty: isEmpty\n};\n\n/**\n * 判断值是否为空\n * @param {Object} value\n * 如果value为null|undefined|空字符串，就判断为真，否则判断为假\n * @return {Boolean} 是否为空\n */\nfunction isEmpty(value) {\n  return value === null || typeof value === 'undefined' || value === '';\n}\n\nvar defaults = {};\n\nvar checkers = {};\n\ncheckers.notEmpty = function(value) {\n  return value && value !== '';\n}\n\ndefaults.checkers = checkers;\n\nvar api = {}, _api = {};\r\n\r\nvar rules = ['empty', 'length', 'email', 'url', 'yes'];\r\n\r\nValidator.is = api;\r\n\r\nValidator.not = _api;\r\n\n\r\nexports.Validator = Validator;\r\n\r\n}));\r\n"],"sourceRoot":"/source/"}