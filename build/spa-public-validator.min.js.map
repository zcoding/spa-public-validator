{"version":3,"sources":["spa-public-validator.js"],"names":["factory","window","exports","isEmpty","value","isEqual","values","equal","i","len","length","empty","pass","long","min","max","range","registAPI","name","callback","is","console","warn","not","objectType","Object","prototype","toString","utils","trim","str","replace","isArray","obj","type","TYPE_ARRAY","isFunction","TYPE_FUNCTION","getValue","htmlElement","getAttribute","getLengthParams","paramString","matcher","result","match","TypeError","Infinite","call","TYPE_STRING","TYPE_REGEXP","Validator","validations","this","checkers","vprtt","add","rules","setRule","rule","test","check","remove","removeRule","FormValidator","formOrSelector","$form","document","querySelectorAll","fields","field","$field","j","push","constructor","getChecker","parts","split","checker","defaults","params","_params","slice","k","unshift","apply","context","fail","matchers","url","email","number","positive","negative","varName","nickName","QQ","upperCase","lowerCase","m","hasOwnProperty","notEmpty","ruleName","testString","api","apiName","_type","_checker","list"],"mappings":"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","file":"spa-public-validator.min.js","sourcesContent":["(function(factory) {\r\n    factory(window);\r\n}(function(exports) {\r\n\nvar objectType = Object.prototype.toString;\r\n\r\nvar hasOwn = function(p) {\r\n  return this.hasOwnProperty(p);\r\n};\r\n\r\nvar utils = {};\r\n\r\n// HACK: 验证的时候，不作trim处理\r\nutils.trim = function(str) {\r\n  return str.replace(/^\\s+|\\s$/g, '');\r\n};\r\n\r\nutils.isArray = function(obj) {\r\n  return utils.type(obj) === utils.TYPE_ARRAY;\r\n};\r\n\r\nutils.isFunction = function(obj) {\r\n  return utils.type(obj) === utils.TYPE_FUNCTION;\r\n};\r\n\r\nutils.getValue = function(htmlElement) {\r\n  if (typeof htmlElement.value === 'undefined') {\r\n    return htmlElement.getAttribute('data-value') || '';\r\n  } else {\r\n    return htmlElement.value;\r\n  }\r\n};\r\n\r\n/**\r\n * 解析length规则的参数\r\n * @param {String} paramString\r\n * @return {Array} params\r\n * TODO: 这里的解析可以更复杂，例如，加入对布尔运算的解析\r\n */\r\nutils.getLengthParams = function(paramString) {\r\n  paramString = paramString[0]; // 暂时只做最简单的解析\r\n  var matcher = /\\s*([\\(\\[])\\s*(\\d+)?\\s*,\\s*(\\d+)?\\s*([\\)\\]])\\s*/; // 如果没有最小限制，最小限制为0；如果没有最大限制，最大限制为Infinite\r\n  var result = paramString.match(matcher);\r\n  if (result === null) {\r\n    throw new TypeError('The parameters for length is illegal.');\r\n  }\r\n  var min = result[2], max = result[3];\r\n  if (typeof min === 'undefined') {\r\n    min = 0;\r\n  } else if (result[1] === '(') {\r\n    min = +min+1;\r\n  } else if (result[1] === '[') {\r\n    min = +min;\r\n  } else {\r\n    throw new TypeError('The parameters for length is illegal.');\r\n  }\r\n  if (typeof max === 'undefined') {\r\n    max = Infinite;\r\n  } else if (result[4] === ')') {\r\n    max = +max-1;\r\n  } else if (result[4] === ']'){\r\n    max = +max;\r\n  } else {\r\n    throw new TypeError('The parameters for length is illegal.');\r\n  }\r\n  if (min !== min || max !== max) {\r\n    throw new TypeError('The parameters for length is illegal.');\r\n  }\r\n  return [min, max];\r\n};\r\n\r\n/**\r\n * Utils: Get Object Type\r\n * @param {Object} obj\r\n * @return {String} object type\r\n */\r\nutils.type = function(obj) {\r\n  return objectType.call(obj);\r\n};\r\n\r\n// Object Type Const String\r\nutils.TYPE_STRING = '[object String]';\r\nutils.TYPE_ARRAY = '[object Array]';\r\nutils.TYPE_FUNCTION = '[object Function]';\r\nutils.TYPE_REGEXP = '[object RegExp]';\r\n\n/**\r\n * @constructor\r\n * @class Validator\r\n */\r\nvar Validator = function(validations) {\r\n  this.checkers = {};\r\n  this.validations = [];\r\n};\r\n\r\nvar vprtt = Validator.prototype;\r\n\r\n/**\r\n * @method .add(rules)\r\n * 添加自定义规则\r\n * 自定义的规则，可以和内建规则同名，但调用时只会使用内建规则。如果要覆盖内建规则，就使用Validator.api（全局覆盖）\r\n * HACK: 因为自定义规则是用数组存的，所以也可能重名\r\n * @param {Object} rules\r\n * @return this\r\n */\r\nvprtt.add = function(rules) {\r\n  function setRule(rule) {\r\n    switch (utils.type(rule.rule)) {\r\n      case utils.TYPE_FUNCTION:\r\n        this.checkers[rule.name] = rule.rule;\r\n        break;\r\n      case utils.TYPE_STRING:\r\n        this.checkers[rule.name] = function() {\r\n        };\r\n        break;\r\n      case utils.TYPE_REGEXP:\r\n        this.checkers[rule.name] = function(values) {\r\n          var pass = true;\r\n          if (utils.isArray(values)) {\r\n            for (var i = 0, len = values.length; i < len; ++i) {\r\n              if (!rule.rule.test(values[i])) {\r\n                pass = false;\r\n                break;\r\n              }\r\n            }\r\n          } else {\r\n            if (!rule.rule.test(values)) {\r\n              pass = false;\r\n            }\r\n          }\r\n          return pass;\r\n        };\r\n        break;\r\n      default:\r\n        throw new TypeError('Rule type not support.');\r\n    }\r\n  }\r\n  if (utils.isArray(rules)) {\r\n    for (var i = 0, len = rules.length; i < len; ++i) {\r\n      setRule.call(this, rules[i]);\r\n    }\r\n  } else {\r\n    setRule.call(this, rules);\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * @method .check()\r\n * @return {Boolean} pass or not\r\n */\r\nvprtt.check = function() {};\r\n\r\n/**\r\n * @method .remove(rules)\r\n * 移除自定义规则\r\n * @param {Array|String} rules\r\n * @return this\r\n */\r\nvprtt.remove = function(rules) {\r\n  function removeRule(rule) {\r\n    if (typeof this.checkers[rule] !== 'undefined') {\r\n      delete this.checkers[rule];\r\n    }\r\n  }\r\n  if (utils.isArray(rules)) {\r\n    for (var i = 0, len = rules.length; i < len; ++i) {\r\n      removeRule(rules[i]);\r\n    }\r\n  } else {\r\n    removeRule(rules);\r\n  }\r\n  return this;\r\n};\r\n\n/**\r\n * @constructor\r\n * @class FormValidator\r\n * @extends Validator\r\n * @param {HTMLElement|String} formOrSelector\r\n * @param {Object|Array} validations\r\n */\r\nvar FormValidator = function(formOrSelector, validations) {\r\n  if (typeof formOrSelector === 'string') {\r\n    this.$form = document.querySelectorAll(formOrSelector)[0];\r\n  } else {\r\n    this.$form = formOrSelector;\r\n  }\r\n  this.validations = [];\r\n  if (!utils.isArray(validations)) {\r\n    validations = [validations];\r\n  }\r\n  for (var i = 0, len = validations.length; i < len; ++i) {\r\n    var fields = validations[i].field;\r\n    if (!utils.isArray(fields)) {\r\n      fields = [fields];\r\n    }\r\n    var $field = [];\r\n    for (var j = 0; j < fields.length; ++j) {\r\n      $field.push(this.$form.querySelectorAll('[name=' + fields[j] + ']')[0]);\r\n    }\r\n    var rules = validations[i].rules;\r\n    rules = utils.isArray(rules) ? rules : [rules];\r\n    this.validations.push({\r\n      $field: $field,\r\n      rules: rules\r\n    });\r\n  }\r\n}\r\n\r\nFormValidator.prototype = new Validator();\r\nFormValidator.prototype.constructor = FormValidator;\r\n\r\n/**\r\n * getChecker\r\n * @param {String} type\r\n * @return {Array} [checkerFunction, params]\r\n */\r\ngetChecker = function(type) {\r\n  var parts = type.split(':');\r\n  type = parts[0].replace(/length/i, 'long');\r\n  var checker = defaults.checkers[type] || this.checkers[type];\r\n  if (!utils.isFunction(checker)) {\r\n    throw new TypeError('Checker for rule ' + parts[0] + ' must be a Function.');\r\n  }\r\n  var params;\r\n  var _params = parts.slice(1);\r\n  switch (type) {\r\n    case 'long':\r\n    case 'range':\r\n      params = utils.getLengthParams(_params);\r\n      break;\r\n    default:\r\n      params = _params;\r\n  }\r\n  return [checker, params];\r\n};\r\n\r\n/**\r\n * @method .check()\r\n * @override Validator.prototype.check()\r\n * @return {Boolean} pass or not\r\n */\r\nFormValidator.prototype.check = function() {\r\n  var $form = this.$form;\r\n  var validations = this.validations;\r\n  var pass = true;\r\n  for (var i = 0, len = validations.length; i < len; ++i) {\r\n    var $field = validations[i].$field;\r\n    var rules = validations[i].rules;\r\n    for (var j = 0; j < rules.length; ++j) {\r\n      var rule = rules[j];\r\n      var checker = getChecker.call(this, rule.type);\r\n      var values  = [];\r\n      for (var k = 0; k < $field.length; ++k) {\r\n        values.push(utils.getValue($field[k]));\r\n      }\r\n      checker[1].unshift(values);\r\n      if (!checker[0].apply(null, checker[1])) {\r\n        var context = $field.length < 2 ? $field[0] : $field;\r\n        rule.fail.call(context, $form);\r\n        pass = false;\r\n        break;\r\n      }\r\n    }\r\n    if (!pass) break;\r\n  }\r\n  return pass;\r\n};\r\n\nvar defaults = {};\n\n// checker函数的第一个参数总是一个数组，这个数组就是待检测的字符串数组\n// 从第二个参数起，每个checker函数带有不同长度的参数列表。例如，empty函数的参数列表长度为0，long函数的参数列表长度为2（暂时，有待改进）\nvar checkers = defaults.checkers = {};\n\nvar rules = defaults.rules = ['empty', 'long', 'email', 'url', 'yes']; // 内置规则\n\nvar matchers = {\n  ////////// 正则匹配\n  url: /^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/\n  , email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i\n  , number: /^(0|([\\+\\-]?[1-9]\\d*))$/\n  // 正整数\n  , positive: /^\\+?[1-9]\\d*$/\n  // 负整数\n  , negative: /^\\-[1-9]\\d*$/\n  // 变量名：只能包含英文字母/数字/下划线，且不能以数字开头\n  , varName: /^[a-zA-Z_][a-zA-Z0-9_]*$/\n  // 昵称：只能包含中文/英文字母/数字/下划线，且不能以数字开头\n  , nickName: /^[\\u4E00-\\u9FA5\\uF900-\\uFA2Da-zA-Z_][\\u4E00-\\u9FA5\\uF900-\\uFA2Da-zA-Z0-9_]*$/\n  // QQ\n  , QQ: /^[1-9][0-9]{4,}$/\n  // 身份证号\n  // 手机号\n  // 电话号码\n  // 邮政编码\n  // IP\n  // IPV4\n  // IPV6\n  // 全大写\n  , upperCase: /^[A-Z]+$/g\n  // 全小写\n  , lowerCase: /^[a-z]$/g\n  ////////// 非正则匹配\n  // 空限制\n  , empty: empty\n  // 相等\n  , equal: isEqual\n  // 长度范围限制\n  , long: long\n  // 数值大小限制\n  , range: range\n};\n\n// 注册defaults.checker，不公开接口\nfor (var m in matchers) {\n  if (matchers.hasOwnProperty(m))\n  var matcher = matchers[m];\n  switch(utils.type(matcher)) {\n    case utils.TYPE_REGEXP:\n      checkers[m] = function(value) {\n        return matcher.test(value);\n      };\n      break;\n    case utils.TYPE_FUNCTION:\n      checkers[m] = matcher;\n      break;\n    default:\n      throw new TypeError('Matcher Type Error.');\n  }\n}\n\n/**\n * 判断值是否为空\n * @param {Object} value\n * 如果value为null|undefined|空字符串，就判断为真，否则判断为假\n * @return {Boolean} 是否为空\n */\nfunction isEmpty(value) {\n  return value === null || typeof value === 'undefined' || value === '';\n}\n\n/**\n * equal check\n * @param {Array} values\n * @return {Boolean} equal or not\n */\nfunction isEqual(values) {\n  var equal = true;\n  for (var i = 0, len = values.length; i < len - 1; ++i) {\n    if (values[i] !== values[i+1]) {\n      equal = false;\n      break;\n    }\n  }\n  return equal;\n}\n\n/**\n * checker: not empty\n * @param {Array} values\n * @return {Boolean} yes or no\n */\ncheckers.notEmpty = function(values) {\n  var pass = true;\n  for (var i = 0, len = values.length; i < len; ++i) {\n    if (isEmpty(values[i])) {\n      pass = false;\n      break;\n    }\n  }\n  return pass;\n};\n\nfunction empty(values) {\n  var pass = true;\n  for (var i = 0, len = values.length; i < len; ++i) {\n    if (!isEmpty(values[i])) {\n      pass = false;\n      break;\n    }\n  }\n  return pass;\n};\n\n/**\n * length check\n * @param {Array} values\n * @param {Number} min\n * @param {Number} max\n * @return {Boolean} yes or no\n */\nfunction long(values, min, max) {\n  var pass = true;\n  for (var i = 0, len = values.length; i < len; ++i) {\n    var length = values[i].length;\n    if (length < min || length > max) {\n      pass = false;\n      break;\n    }\n  }\n  return pass;\n};\n\n/**\n * number range check\n * 这个函数和long类似，但是不是用来限制长度的，而是用来限制数值本身的\n * TODO:和long不同，min可以是负数甚至是负无穷（未指定时），而且min和max都可以是浮点型\n * @param {Array} values\n * @param {Number} min\n * @param {Number} max\n * @return {Boolean} yes or no\n */\nfunction range(values, min, max) {\n  var pass = true;\n  for (var i = 0, len = values.length; i < len; ++i) {\n    // 首先应该保证是数值型，如果不是就抛出异常（在实际验证中应该在这个规则之前写一个数值型验证）\n  }\n  return pass;\n};\n\n/**\r\n * @static Validator.is\r\n * @param {String} ruleName\r\n * @param {String} testString\r\n * @return {Boolean} is or not\r\n * HACK: is是一个函数对象，注意属性不能被覆盖\r\n */\r\nvar is = function is(ruleName, testString) {\r\n  return is[ruleName](testString);\r\n};\r\n\r\n/**\r\n * @static Validator.not\r\n * @param {String} ruleName\r\n * @param {String} testString\r\n * @return {Boolean} is or not\r\n */\r\nvar not = function not(ruleName, testString) {\r\n  return not[ruleName](testString);\r\n};\r\n\r\nValidator.is = is;\r\n\r\nValidator.not = not;\r\n\r\n/**\r\n * This helper helps to regist api\r\n * @param {String} name\r\n * @param {Function} callback\r\n */\r\nfunction registAPI(name, callback) {\r\n  if (typeof is[name] !== 'undefined') {\r\n    console.warn('Warning: current api \"' + name + '\" will be overridden.');\r\n  }\r\n  is[name] = callback;\r\n  not[name] = function(value) {\r\n    return !is[name](value);\r\n  };\r\n}\r\n\r\nValidator.not = not;\r\n\r\n// 注册内建规则\r\nfor (var i = 0, len = defaults.rules.length; i < len; ++i) {\r\n  registAPI(defaults.rules[i], defaults.checkers[defaults.rules[i]]);\r\n}\r\n\r\n/**\r\n * @static Validator.api(type, apiName, checker)\r\n * @param {String} type\r\n * @param {String} apiName\r\n * @param {String|RegExp|Function} checker\r\n * checker可以是字符串，正则表达式，或者函数\r\n * 当checker是字符串时，表示基于内建的规则添加的新规则（其实完全可以用内建规则实现）\r\n * 当checker是正则表达式时，表示一条通过该正则表达式测试的规则\r\n * 当checker是函数时，该函数的返回值必须是布尔\r\n * This function may throw a `TypeError` if checker's type is not support.\r\n * @return Validator\r\n */\r\nValidator.api = function(type, apiName, checker) {\r\n  var _type = utils.type(checker);\r\n  if (!/is|not/.test(type)) {\r\n    throw new TypeError('The api type \"' + type + '\" is not support.');\r\n  }\r\n  var is = type === 'is';\r\n  var callback;\r\n  switch(_type) {\r\n    case utils.TYPE_STRING:\r\n      var parts = checker.split(':');\r\n      var _checker = defaults.checkers[parts[0]];\r\n      if (typeof _checker === 'undefined') {\r\n        throw new TypeError('Checker ' + parts[0] + ' is not defined.');\r\n      }\r\n      callback = function(value) {\r\n        var result = _checker.call(this, parts.slice(1));\r\n        return is ?  result: !result;\r\n      };\r\n      break;\r\n    case utils.TYPE_REGEXP:\r\n      callback = function(value) {\r\n        var result = checker.test(value);\r\n        return is ? result : !result;\r\n      }\r\n      break;\r\n    case utils.TYPE_FUNCTION:\r\n      callback = checker;\r\n      break;\r\n    default:\r\n      throw new TypeError('Checker must be a String/RegExp/Function.');\r\n  }\r\n  registAPI(apiName, callback);\r\n  return Validator;\r\n};\r\n\r\n/**\r\n * list all registed api\r\n */\r\nValidator.api.list = function() {\r\n  return rules;\r\n};\r\n\n\r\nexports.Validator = Validator;\r\n\r\nexports.FormValidator = FormValidator;\r\n\r\n}));\r\n"],"sourceRoot":"/source/"}