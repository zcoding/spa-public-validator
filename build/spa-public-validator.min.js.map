{"version":3,"sources":["spa-public-validator.js"],"names":["factory","window","exports","isEmpty","value","isEqual","values","equal","i","len","length","empty","pass","long","min","max","range","registDefaultCheckers","name","checker","is","not","getChecker","type","parts","split","replace","this","checkers","api","defaults","utils","isFunction","TypeError","params","_params","slice","getLengthParams","objectType","Object","prototype","toString","trim","str","isArray","obj","TYPE_ARRAY","TYPE_FUNCTION","getValue","htmlElement","getAttribute","paramString","matcher","result","match","Infinite","call","TYPE_STRING","TYPE_REGEXP","Validator","validations","fields","field","$field","j","push","$form","querySelectorAll","rules","vprtt","add","setRule","rule","test","check","remove","removeRule","matchers","url","email","number","positive","negative","varName","nickName","QQ","upperCase","lowerCase","m","hasOwnProperty","ruleName","registApiChecker","callback","_type","_checker","extend","constructorFunction","constructor","FormValidator","formOrSelector","document","ruleType","k","unshift","apply","context","fail"],"mappings":"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","file":"spa-public-validator.min.js","sourcesContent":["(function(factory) {\r\n    factory(window);\r\n}(function(exports) {\r\n\nvar objectType = Object.prototype.toString;\r\n\r\nvar hasOwn = function(p) {\r\n  return this.hasOwnProperty(p);\r\n};\r\n\r\nvar utils = {};\r\n\r\n// HACK: 验证的时候，不作trim处理\r\nutils.trim = function(str) {\r\n  return str.replace(/^\\s+|\\s$/g, '');\r\n};\r\n\r\nutils.isArray = function(obj) {\r\n  return utils.type(obj) === utils.TYPE_ARRAY;\r\n};\r\n\r\nutils.isFunction = function(obj) {\r\n  return utils.type(obj) === utils.TYPE_FUNCTION;\r\n};\r\n\r\nutils.getValue = function(htmlElement) {\r\n  if (typeof htmlElement.value === 'undefined') {\r\n    return htmlElement.getAttribute('data-value') || '';\r\n  } else {\r\n    return htmlElement.value;\r\n  }\r\n};\r\n\r\n/**\r\n * 解析length规则的参数\r\n * @param {String} paramString\r\n * @return {Array} params\r\n * TODO: 这里的解析可以更复杂，例如，加入对布尔运算的解析\r\n */\r\nutils.getLengthParams = function(paramString) {\r\n  paramString = paramString[0]; // 暂时只做最简单的解析\r\n  var matcher = /\\s*([\\(\\[])\\s*(\\d+)?\\s*,\\s*(\\d+)?\\s*([\\)\\]])\\s*/; // 如果没有最小限制，最小限制为0；如果没有最大限制，最大限制为Infinite\r\n  var result = paramString.match(matcher);\r\n  if (result === null) {\r\n    throw new TypeError('The parameters for length is illegal.');\r\n  }\r\n  var min = result[2], max = result[3];\r\n  if (typeof min === 'undefined') {\r\n    min = 0;\r\n  } else if (result[1] === '(') {\r\n    min = +min+1;\r\n  } else if (result[1] === '[') {\r\n    min = +min;\r\n  } else {\r\n    throw new TypeError('The parameters for length is illegal.');\r\n  }\r\n  if (typeof max === 'undefined') {\r\n    max = Infinite;\r\n  } else if (result[4] === ')') {\r\n    max = +max-1;\r\n  } else if (result[4] === ']'){\r\n    max = +max;\r\n  } else {\r\n    throw new TypeError('The parameters for length is illegal.');\r\n  }\r\n  if (min !== min || max !== max) {\r\n    throw new TypeError('The parameters for length is illegal.');\r\n  }\r\n  return [min, max];\r\n};\r\n\r\n/**\r\n * Utils: Get Object Type\r\n * @param {Object} obj\r\n * @return {String} object type\r\n */\r\nutils.type = function(obj) {\r\n  return objectType.call(obj);\r\n};\r\n\r\n// Object Type Const String\r\nutils.TYPE_STRING = '[object String]';\r\nutils.TYPE_ARRAY = '[object Array]';\r\nutils.TYPE_FUNCTION = '[object Function]';\r\nutils.TYPE_REGEXP = '[object RegExp]';\r\n\n/**\r\n * @constructor\r\n * @class Validator\r\n * @param {Array|Object} validations\r\n */\r\nvar Validator = function(validations) {\r\n  this.checkers = {};\r\n\r\n  validations = validations || [];\r\n\r\n  this.validations = [];\r\n  if (!utils.isArray(validations)) {\r\n    validations = [validations];\r\n  }\r\n  for (var i = 0, len = validations.length; i < len; ++i) {\r\n    var fields = validations[i].field;\r\n    if (!utils.isArray(fields)) {\r\n      fields = [fields];\r\n    }\r\n    var $field = [];\r\n    for (var j = 0; j < fields.length; ++j) {\r\n      $field.push(this.$form.querySelectorAll('[name=' + fields[j] + ']')[0]);\r\n    }\r\n    var rules = validations[i].rules;\r\n    rules = utils.isArray(rules) ? rules : [rules];\r\n    this.validations.push({\r\n      $field: $field,\r\n      rules: rules\r\n    });\r\n  }\r\n};\r\n\r\nvar vprtt = Validator.prototype;\r\n\r\n/**\r\n * @method .add(rules)\r\n * 添加自定义规则\r\n * @param {Object} rules\r\n * @return this\r\n */\r\nvprtt.add = function(rules) {\r\n  function setRule(rule) {\r\n    switch (utils.type(rule.rule)) {\r\n      case utils.TYPE_FUNCTION:\r\n        this.checkers[rule.name] = rule.rule;\r\n        break;\r\n      case utils.TYPE_STRING:\r\n        this.checkers[rule.name] = function() {\r\n        };\r\n        break;\r\n      case utils.TYPE_REGEXP:\r\n        this.checkers[rule.name] = function(values) {\r\n          var pass = true;\r\n          if (utils.isArray(values)) {\r\n            for (var i = 0, len = values.length; i < len; ++i) {\r\n              if (!rule.rule.test(values[i])) {\r\n                pass = false;\r\n                break;\r\n              }\r\n            }\r\n          } else {\r\n            if (!rule.rule.test(values)) {\r\n              pass = false;\r\n            }\r\n          }\r\n          return pass;\r\n        };\r\n        break;\r\n      default:\r\n        throw new TypeError('Rule type not support.');\r\n    }\r\n  }\r\n  if (utils.isArray(rules)) {\r\n    for (var i = 0, len = rules.length; i < len; ++i) {\r\n      setRule.call(this, rules[i]);\r\n    }\r\n  } else {\r\n    setRule.call(this, rules);\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * @method .check()\r\n * @return {Boolean} pass or not\r\n */\r\nvprtt.check = function() {\r\n  return this;\r\n};\r\n\r\n/**\r\n * @method .remove(rules)\r\n * 移除自定义规则\r\n * @param {Array|String} rules\r\n * @return this\r\n */\r\nvprtt.remove = function(rules) {\r\n  function removeRule(rule) {\r\n    if (typeof this.checkers[rule] !== 'undefined') {\r\n      delete this.checkers[rule];\r\n    }\r\n  }\r\n  if (utils.isArray(rules)) {\r\n    for (var i = 0, len = rules.length; i < len; ++i) {\r\n      removeRule(rules[i]);\r\n    }\r\n  } else {\r\n    removeRule(rules);\r\n  }\r\n  return this;\r\n};\r\n\nvar defaults = {};\r\n\r\n// checker函数的第一个参数总是一个数组，这个数组就是待检测的字符串数组\r\n// 从第二个参数起，每个checker函数带有不同长度的参数列表。例如，empty函数的参数列表长度为0，long函数的参数列表长度为2（暂时，有待改进）\r\ndefaults.checkers = {};\r\n\r\nvar rules = defaults.rules = ['empty', 'long', 'email', 'url', 'yes']; // 内置规则\r\n\r\nvar matchers = {\r\n  ////////// 正则匹配\r\n  url: /^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/\r\n  , email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i\r\n  , number: /^(0|([\\+\\-]?[1-9]\\d*))$/\r\n  // 正整数\r\n  , positive: /^\\+?[1-9]\\d*$/\r\n  // 负整数\r\n  , negative: /^\\-[1-9]\\d*$/\r\n  // 变量名：只能包含英文字母/数字/下划线，且不能以数字开头\r\n  , varName: /^[a-zA-Z_][a-zA-Z0-9_]*$/\r\n  // 昵称：只能包含中文/英文字母/数字/下划线，且不能以数字开头\r\n  , nickName: /^[\\u4E00-\\u9FA5\\uF900-\\uFA2Da-zA-Z_][\\u4E00-\\u9FA5\\uF900-\\uFA2Da-zA-Z0-9_]*$/\r\n  // QQ\r\n  , QQ: /^[1-9][0-9]{4,}$/\r\n  // 身份证号\r\n  // 手机号\r\n  // 电话号码\r\n  // 邮政编码\r\n  // IP\r\n  // IPV4\r\n  // IPV6\r\n  // 全大写\r\n  , upperCase: /^[A-Z]+$/g\r\n  // 全小写\r\n  , lowerCase: /^[a-z]$/g\r\n  ////////// 非正则匹配\r\n  // 空限制\r\n  , empty: empty\r\n  // 相等\r\n  , equal: isEqual\r\n  // 长度范围限制\r\n  , long: long\r\n  // 数值大小限制\r\n  , range: range\r\n};\r\n\r\n// 注册defaults.checker\r\nfor (var m in matchers) {\r\n  if (matchers.hasOwnProperty(m))\r\n  var matcher = matchers[m];\r\n  switch(utils.type(matcher)) {\r\n    case utils.TYPE_REGEXP:\r\n      defaults.checkers[m] = function(value) {\r\n        return matcher.test(value);\r\n      };\r\n      break;\r\n    case utils.TYPE_FUNCTION:\r\n      defaults.checkers[m] = matcher;\r\n      break;\r\n    default:\r\n      throw new TypeError('Matcher Type Error.');\r\n  }\r\n}\r\n\r\n/**\r\n * 判断值是否为空\r\n * @param {Object} value\r\n * 如果value为null|undefined|空字符串，就判断为真，否则判断为假\r\n * @return {Boolean} 是否为空\r\n */\r\nfunction isEmpty(value) {\r\n  return value === null || typeof value === 'undefined' || value === '';\r\n}\r\n\r\n/**\r\n * equal check\r\n * @param {Array} values\r\n * @return {Boolean} equal or not\r\n */\r\nfunction isEqual(values) {\r\n  var equal = true;\r\n  for (var i = 0, len = values.length; i < len - 1; ++i) {\r\n    if (values[i] !== values[i+1]) {\r\n      equal = false;\r\n      break;\r\n    }\r\n  }\r\n  return equal;\r\n}\r\n\r\n/**\r\n * defaults.checkers: empty check\r\n * @param {Array} values\r\n * @return {Boolean} yes or no\r\n */\r\nfunction empty(values) {\r\n  var pass = true;\r\n  for (var i = 0, len = values.length; i < len; ++i) {\r\n    if (!isEmpty(values[i])) {\r\n      pass = false;\r\n      break;\r\n    }\r\n  }\r\n  return pass;\r\n};\r\n\r\n/**\r\n * defaults.checkers: length check\r\n * @param {Array} values\r\n * @param {Number} min\r\n * @param {Number} max\r\n * @return {Boolean} yes or no\r\n */\r\nfunction long(values, min, max) {\r\n  var pass = true;\r\n  for (var i = 0, len = values.length; i < len; ++i) {\r\n    var length = values[i].length;\r\n    if (length < min || length > max) {\r\n      pass = false;\r\n      break;\r\n    }\r\n  }\r\n  return pass;\r\n};\r\n\r\n/**\r\n * defaults.check: number range check\r\n * 这个函数和long类似，但是不是用来限制长度的，而是用来限制数值本身的\r\n * TODO:和long不同，min可以是负数甚至是负无穷（未指定时），而且min和max都可以是浮点型\r\n * @param {Array} values\r\n * @param {Number} min\r\n * @param {Number} max\r\n * @return {Boolean} yes or no\r\n */\r\nfunction range(values, min, max) {\r\n  var pass = true;\r\n  for (var i = 0, len = values.length; i < len; ++i) {\r\n    // 首先应该保证是数值型，如果不是就抛出异常（在实际验证中应该在这个规则之前写一个数值型验证）\r\n  }\r\n  return pass;\r\n};\r\n\n/**\r\n * @static Validator.is\r\n * 优先级： api.checkers > defaults.checkers\r\n * @param {String} ruleName\r\n * @param {String} value\r\n * @return {Boolean} is or not\r\n */\r\nvar is = Validator.is = function(ruleName, value) {\r\n  var checker = api.checkers[ruleName] || defaults.checkers[ruleName];\r\n  if (!utils.isFunction(checker)) {\r\n    throw new TypeError('Checker for ' + ruleName + ' is not defined.');\r\n  }\r\n  return checker(value);\r\n};\r\n\r\n/**\r\n * @static Validator.not\r\n * @param {String} ruleName\r\n * @param {String} testString\r\n * @return {Boolean} is or not\r\n */\r\nvar not = Validator.not = function(ruleName, value) {\r\n  var checker = api.checkers[ruleName] || checkers[ruleName];\r\n  if (!utils.isFunction(checker)) {\r\n    throw new TypeError('Checker for ' + ruleName + ' is not defined.');\r\n  }\r\n  return function(value) {\r\n    return !checker(value);\r\n  };\r\n};\r\n\r\n/**\r\n * This helper helps to regist default checkers 注册内建规则\r\n * 注册is/not的时候，注意不要和属性名重名，为了避免这一情况，只有默认规则注册到is/not，通过.api()注册的其它规则注册到api.checkers对象\r\n */\r\nfunction registDefaultCheckers(name, checker) {\r\n  is[name] = checker;\r\n  not[name] = function(value) {\r\n    return !checker(value);\r\n  };\r\n}\r\nfor (var i = 0, len = defaults.rules.length; i < len; ++i) {\r\n  registDefaultCheckers(defaults.rules[i], defaults.checkers[defaults.rules[i]]);\r\n}\r\n\r\nvar api = {};\r\n\r\napi.checkers = {};\r\n\r\n/**\r\n * @static Validator.api(type, apiName, checker)\r\n * TODO: 修改参数列表，只接收一个参数\r\n * @param {Array|Object} rules\r\n * @return Validator\r\n */\r\nValidator.api = function(rules) {\r\n\r\n  /**\r\n   * @param {String} type\r\n   * @param {String|RegExp|Function} checker\r\n   * checker可以是字符串，正则表达式，或者函数\r\n   * 当checker是字符串时，表示基于内建的规则添加的新规则（其实完全可以用内建规则实现）\r\n   * 当checker是正则表达式时，表示一条通过该正则表达式测试的规则\r\n   * 当checker是函数时，该函数的返回值必须是布尔\r\n   * This function may throw a `TypeError` if checker's type is not support.\r\n   */\r\n  function registApiChecker(type, checker) {\r\n    var _type = utils.type(checker);\r\n    var callback;\r\n    switch(_type) {\r\n      case utils.TYPE_STRING:\r\n        var parts = checker.split(':');\r\n        var _checker = defaults.checkers[parts[0]];\r\n        if (typeof _checker === 'undefined') {\r\n          throw new TypeError('Checker ' + parts[0] + ' is not defined.');\r\n        }\r\n        callback = function(value) {\r\n          return _checker.call(this, parts.slice(1));\r\n        };\r\n        break;\r\n      case utils.TYPE_REGEXP:\r\n        callback = function(value) {\r\n          return checker.test(value);\r\n        }\r\n        break;\r\n      case utils.TYPE_FUNCTION:\r\n        callback = checker;\r\n        break;\r\n      default:\r\n        throw new TypeError('Checker must be a String/RegExp/Function.');\r\n    }\r\n    api[type] = callback;\r\n  }\r\n\r\n  if (utils.isArray(rules)) {\r\n    for (var i = 0, len = rules.length; i < len; ++i) {\r\n      registApiChecker(rules[i]);\r\n    }\r\n  } else {\r\n    registApiChecker(rules);\r\n  }\r\n\r\n  return Validator;\r\n};\r\n\n/**\n * @static Validator.extends()\n */\nValidator.extend = function(constructorFunction) {\n\n  constructorFunction.prototype = new Validator();\n  constructorFunction.prototype.constructor = constructorFunction;\n\n  return constructorFunction;\n\n};\n\n/**\r\n * @constructor\r\n * @class FormValidator\r\n * @extends Validator\r\n * @param {HTMLElement|String} formOrSelector\r\n * @param {Object|Array} validations\r\n */\r\nvar FormValidator = Validator.extend(function(formOrSelector, validations) {\r\n  if (typeof formOrSelector === 'string') {\r\n    this.$form = document.querySelectorAll(formOrSelector)[0]; // TODO: querySelectorAll兼容性\r\n  } else {\r\n    this.$form = formOrSelector;\r\n  }\r\n  this.validations = [];\r\n  if (!utils.isArray(validations)) {\r\n    validations = [validations];\r\n  }\r\n  for (var i = 0, len = validations.length; i < len; ++i) {\r\n    var fields = validations[i].field;\r\n    if (!utils.isArray(fields)) {\r\n      fields = [fields];\r\n    }\r\n    var $field = [];\r\n    for (var j = 0; j < fields.length; ++j) {\r\n      $field.push(this.$form.querySelectorAll('[name=' + fields[j] + ']')[0]); // TODO: querySelectorAll兼容性\r\n    }\r\n    var rules = validations[i].rules;\r\n    rules = utils.isArray(rules) ? rules : [rules];\r\n    this.validations.push({\r\n      $field: $field,\r\n      rules: rules\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * getChecker\r\n * 优先级：this.checkers > api.checkers > defaults.checkers\r\n * @param {String} type\r\n * @return {Array} [checkerFunction, params]\r\n * TODO:增加对取反符号`!`的支持\r\n */\r\nfunction getChecker(type) {\r\n  var parts = type.split(':');\r\n  type = parts[0].replace(/length/i, 'long');\r\n  var checker = this.checkers[type] || api.checkers[type] || defaults.checkers[type];\r\n  if (!utils.isFunction(checker)) {\r\n    throw new TypeError('Checker for rule ' + parts[0] + ' must be a Function.');\r\n  }\r\n  var params;\r\n  var _params = parts.slice(1);\r\n  switch (type) {\r\n    case 'long':\r\n    case 'range':\r\n      params = utils.getLengthParams(_params);\r\n      break;\r\n    default:\r\n      params = _params;\r\n  }\r\n  return [checker, params];\r\n};\r\n\r\n/**\r\n * @method .check()\r\n * @override Validator.prototype.check()\r\n * @return {Boolean} pass or not\r\n * TODO:增加对取反符号`!`的支持\r\n */\r\nFormValidator.prototype.check = function() {\r\n  var $form = this.$form;\r\n  var validations = this.validations;\r\n  var pass = true;\r\n  for (var i = 0, len = validations.length; i < len; ++i) {\r\n    var $field = validations[i].$field;\r\n    var rules = validations[i].rules;\r\n    for (var j = 0; j < rules.length; ++j) {\r\n      var rule = rules[j];\r\n      var not = rule.type[0] === '!';\r\n      var ruleType = not ? rule.type.slice(1) : rule.type;\r\n      var checker = getChecker.call(this, ruleType);\r\n      var values  = [];\r\n      for (var k = 0; k < $field.length; ++k) {\r\n        values.push(utils.getValue($field[k]));\r\n      }\r\n      checker[1].unshift(values);\r\n      var result = checker[0].apply(null, checker[1]);\r\n      if (not && result || !not && !result) {\r\n\r\n        var context = $field.length < 2 ? $field[0] : $field;\r\n        rule.fail.call(context, $form);\r\n        pass = false;\r\n        break;\r\n      }\r\n    }\r\n    if (!pass) break;\r\n  }\r\n  return pass;\r\n};\r\n\n\r\nexports.Validator = Validator;\r\n\r\nexports.FormValidator = FormValidator;\r\n\r\n}));\r\n"],"sourceRoot":"/source/"}