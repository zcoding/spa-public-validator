{"version":3,"sources":["spa-public-validator.js"],"names":["factory","define","cmd","require","exports","module","window","isEmpty","value","registAPI","name","callback","is","console","warn","not","objectType","Object","prototype","toString","utils","isArray","obj","type","TYPE_ARRAY","isFunction","TYPE_FUNCTION","getValue","htmlElement","getAttribute","call","TYPE_STRING","TYPE_REGEXP","Validator","vprtt","add","rules","this","createFormValidator","formOrSelector","validations","FormValidator","$form","document","querySelectorAll","i","len","length","fields","field","$field","j","push","constructor","check","pass","rule","checker","defaults","checkers","TypeError","fail","matchers","url","email","empty","notEmpty","ruleName","testString","lenght","api","apiName","_type","test","parts","split","_checker","result","slice","list"],"mappings":"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","file":"spa-public-validator.min.js","sourcesContent":["(function(factory) {\r\n  if (typeof define === 'function' && define.cmd) {\r\n    define(function(require, exports, module) {\r\n      factory(exports);\r\n    });\r\n  } else {\r\n    factory(window)\r\n  }\r\n}(function(exports) {\r\n\nvar objectType = Object.prototype.toString;\r\n\r\nvar hasOwn = function(p) {\r\n  return this.hasOwnProperty(p);\r\n};\r\n\r\nvar utils = {};\r\n\r\nutils.isArray = function(obj) {\r\n  return utils.type(obj) === utils.TYPE_ARRAY;\r\n};\r\n\r\nutils.isFunction = function(obj) {\r\n  return utils.type(obj) === utils.TYPE_FUNCTION;\r\n};\r\n\r\nutils.getValue = function(htmlElement) {\r\n  if (typeof htmlElement.value === 'undefined') {\r\n    return htmlElement.getAttribute('data-value') || '';\r\n  } else {\r\n    return htmlElement.value;\r\n  }\r\n};\r\n\r\nutils.type = function(type) {\r\n  return objectType.call(type);\r\n};\r\n\r\nutils.TYPE_STRING = '[object String]';\r\nutils.TYPE_ARRAY = '[object Array]';\r\nutils.TYPE_FUNCTION = '[object Function]';\r\nutils.TYPE_REGEXP = '[object RegExp]';\r\n\n/**\r\n * @class Validator\r\n * @constructor\r\n */\r\nvar Validator = function() {};\r\n\r\nvar vprtt = Validator.prototype;\r\n\r\n/**\r\n * @method .add()\r\n * @param {Object} rules\r\n * @return this\r\n */\r\nvprtt.add = function(rules) {\r\n  return this;\r\n};\r\n\r\n/**\r\n * @method .createFormValidator()\r\n * @param {Element|String} form|selector\r\n * @param {Object} validations\r\n */\r\nvprtt.createFormValidator = function(formOrSelector, validations) {\r\n  return new FormValidator(formOrSelector, validations);\r\n};\r\n\r\n/**\r\n * @class FormValidator extends Validator\r\n * @constructor\r\n * @param {HTMLElement|String} formOrSelector\r\n * @param {Object|Array} validations\r\n */\r\nvar FormValidator = function(formOrSelector, validations) {\r\n  if (typeof formOrSelector === 'string') {\r\n    this.$form = document.querySelectorAll(formOrSelector)[0];\r\n  } else {\r\n    this.$form = formOrSelector;\r\n  }\r\n  this.validations = [];\r\n  if (!utils.isArray(validations)) {\r\n    validations = [validations];\r\n  }\r\n  for (var i = 0, len = validations.length; i < len; ++i) {\r\n    var fields = validations[i].field;\r\n    if (!utils.isArray(fields)) {\r\n      fields = [fields];\r\n    }\r\n    var $field = [];\r\n    for (var j = 0; j < fields.length; ++j) {\r\n      $field.push(this.$form.querySelectorAll('[name=' + fields[j] + ']')[0]);\r\n    }\r\n    var rules = validations[i].rules;\r\n    rules = utils.isArray(rules) ? rules : [rules];\r\n    this.validations.push({\r\n      $field: $field,\r\n      rules: rules\r\n    });\r\n  }\r\n}\r\n\r\nFormValidator.prototype = new Validator();\r\nFormValidator.prototype.constructor = FormValidator;\r\n\r\n/**\r\n * .check()\r\n * @return {Boolean} pass or not\r\n */\r\nFormValidator.prototype.check = function() {\r\n  var $form = this.$form;\r\n  var validations = this.validations;\r\n  var pass = true;\r\n  for (var i = 0, len = validations.length; i < len; ++i) {\r\n    var $field = validations[i].$field;\r\n    var rules = validations[i].rules;\r\n    for (var j = 0; j < rules.length; ++j) {\r\n      var rule = rules[j];\r\n      var checker = defaults.checkers[rule.type];\r\n      if (!utils.isFunction(checker)) {\r\n        throw new TypeError('Checker for rule ' + rule.type + ' must be a Function.');\r\n      }\r\n      var value = utils.getValue($field); // TODO: 这里还要处理多个域共同验证\r\n      if (!checker(value)) {\r\n        rule.fail.call($field, $form);\r\n        pass = false;\r\n        break;\r\n      }\r\n    }\r\n    if (!pass) break;\r\n  }\r\n  return pass;\r\n};\r\n\nvar rules = ['empty', 'length', 'email', 'url', 'yes']; // 内置规则\n\nvar matchers = {\n  ////////// 正则匹配\n  url: /^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/,\n  email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\n  ////////// 非正则匹配\n  empty: isEmpty\n};\n\n/**\n * 判断值是否为空\n * @param {Object} value\n * 如果value为null|undefined|空字符串，就判断为真，否则判断为假\n * @return {Boolean} 是否为空\n */\nfunction isEmpty(value) {\n  return value === null || typeof value === 'undefined' || value === '';\n}\n\nvar defaults = {};\n\nvar checkers = {};\n\ncheckers.notEmpty = matchers.empty;\n\ndefaults.checkers = checkers;\n\n/**\r\n * @static Validator.is\r\n * @param {String} ruleName\r\n * @param {String} testString\r\n * @return {Boolean} is or not\r\n */\r\nvar is = function(ruleName, testString) {\r\n  return is[ruleName](testString);\r\n};\r\n\r\n/**\r\n * @static Validator.not\r\n * @param {String} ruleName\r\n * @param {String} testString\r\n * @return {Boolean} is or not\r\n */\r\nvar not = function(ruleName, testString) {\r\n  return not[ruleName](testString);\r\n};\r\n\r\nValidator.is = is;\r\n\r\nValidator.not = not;\r\n\r\n/**\r\n * This helper helps to regist api\r\n * @param {String} name\r\n * @param {Function} callback\r\n */\r\nfunction registAPI(name, callback) {\r\n  if (typeof is[name] !== 'undefined') {\r\n    console.warn('Warning: current api \"' + name + '\" will be overwritten.');\r\n  }\r\n  is[name] = callback;\r\n  not[name] = function(value) {\r\n    return !is[name](value);\r\n  };\r\n}\r\n\r\nValidator.not = not;\r\n\r\nfor (var i = 0, len = rules.lenght; i < len; ++i) {\r\n  registAPI(rules[i], defaults.checkers[rules[i]]);\r\n}\r\n\r\n/**\r\n * @static Validator.api(type, apiName, checker)\r\n * @param {String} type\r\n * @param {String} apiName\r\n * @param {String|RegExp|Function} checker\r\n * checker可以是字符串，正则表达式，或者函数\r\n * 当checker是字符串时，表示基于内建的规则添加的新规则（其实完全可以用内建规则实现）\r\n * 当checker是正则表达式时，表示一条通过该正则表达式测试的规则\r\n * 当checker是函数时，该函数的返回值必须是布尔\r\n * This function may throw a `TypeError` if checker's type is not support.\r\n * @return Validator\r\n */\r\nValidator.api = function(type, apiName, checker) {\r\n  var _type = utils.type(checker);\r\n  if (!/is|not/.test(type)) {\r\n    throw new TypeError('The api type \"' + type + '\" is not support.');\r\n  }\r\n  var is = type === 'is';\r\n  var callback;\r\n  switch(_type) {\r\n    case utils.TYPE_STRING:\r\n      var parts = checker.split(':');\r\n      var _checker = defaults.checkers[parts[0]];\r\n      if (typeof _checker === 'undefined') {\r\n        throw new TypeError('Checker ' + parts[0] + ' is not defined.');\r\n      }\r\n      callback = function(value) {\r\n        var result = _checker.call(this, parts.slice(1));\r\n        return is ?  result: !result;\r\n      };\r\n      break;\r\n    case utils.TYPE_REGEXP:\r\n      callback = function(value) {\r\n        var result = checker.test(value);\r\n        return is ? result : !result;\r\n      }\r\n      break;\r\n    case utils.TYPE_FUNCTION:\r\n      callback = checker;\r\n      break;\r\n    default:\r\n      throw new TypeError('Checker must be a String/RegExp/Function.');\r\n  }\r\n  registAPI(apiName, callback);\r\n  return Validator;\r\n};\r\n\r\n/**\r\n * list all registed api\r\n */\r\nValidator.api.list = function() {\r\n  return rules;\r\n};\r\n\n\r\nexports.Validator = Validator;\r\n\r\n}));\r\n"],"sourceRoot":"/source/"}