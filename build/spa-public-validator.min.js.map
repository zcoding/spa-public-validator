{"version":3,"sources":["spa-public-validator.js"],"names":["factory","window","exports","isEmpty","value","equal","values","i","len","length","empty","pass","long","min","max","range","leftEqual","rightEqual","registDefaultCheckers","name","matcher","callback","utils","type","TYPE_REGEXP","test","TYPE_FUNCTION","TypeError","defaults","checkers","is","not","apply","arguments","getChecker","parts","split","replace","checker","this","api","isFunction","params","_params","slice","getLengthParams","getRangeParams","objectType","Object","prototype","toString","trim","str","isArray","obj","TYPE_ARRAY","getValue","htmlElement","getAttribute","paramString","result","match","Infinity","errorString","call","TYPE_STRING","Validator","validations","fields","field","$field","j","push","$form","querySelectorAll","rules","vprtt","add","setRule","rule","check","remove","removeRule","matchers","url","email","number","int","positive","negative","varName","nickName","QQ","upperCase","lowerCase","ruleName","m","hasOwnProperty","registApiChecker","_type","_checker","extend","constructorFunction","constructor","FormValidator","formOrSelector","document","ruleType","k","unshift","context","fail"],"mappings":"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","file":"spa-public-validator.min.js","sourcesContent":["(function(factory) {\r\n    factory(window);\r\n}(function(exports) {\r\n\nvar objectType = Object.prototype.toString;\r\n\r\nvar hasOwn = function(p) {\r\n  return this.hasOwnProperty(p);\r\n};\r\n\r\nvar utils = {};\r\n\r\n// HACK: 验证的时候，不作trim处理\r\nutils.trim = function(str) {\r\n  return str.replace(/^\\s+|\\s$/g, '');\r\n};\r\n\r\nutils.isArray = function(obj) {\r\n  return utils.type(obj) === utils.TYPE_ARRAY;\r\n};\r\n\r\nutils.isFunction = function(obj) {\r\n  return utils.type(obj) === utils.TYPE_FUNCTION;\r\n};\r\n\r\nutils.getValue = function(htmlElement) {\r\n  if (typeof htmlElement.value === 'undefined') {\r\n    return htmlElement.getAttribute('data-value') || '';\r\n  } else {\r\n    return htmlElement.value;\r\n  }\r\n};\r\n\r\n/**\r\n * 解析length规则的参数\r\n * @param {String} paramString\r\n * @return {Array} params\r\n * TODO: 这里的解析可以更复杂，例如，加入对布尔运算(`&&`,`||`)的解析\r\n */\r\nutils.getLengthParams = function(paramString) {\r\n  paramString = paramString[0]; // HACK: 假设只有一个参数\r\n  var matcher = /\\s*([\\(\\[])\\s*(\\d+)?\\s*,\\s*(\\d+)?\\s*([\\)\\]])\\s*/; // 如果没有最小限制，最小限制为0；如果没有最大限制，最大限制为Infinite\r\n  var result = paramString.match(matcher);\r\n  if (result === null) {\r\n    throw new TypeError('The parameters for length is illegal.');\r\n  }\r\n  var min = result[2], max = result[3];\r\n  if (typeof min === 'undefined') {\r\n    min = 0;\r\n  } else if (result[1] === '(') {\r\n    min = +min+1;\r\n  } else if (result[1] === '[') {\r\n    min = +min;\r\n  } else {\r\n    throw new TypeError('The parameters for length is illegal.');\r\n  }\r\n  if (typeof max === 'undefined') {\r\n    max = Infinity;\r\n  } else if (result[4] === ')') {\r\n    max = +max-1;\r\n  } else if (result[4] === ']'){\r\n    max = +max;\r\n  } else {\r\n    throw new TypeError('The parameters for length is illegal.');\r\n  }\r\n  if (min !== min || max !== max) {\r\n    throw new TypeError('The parameters for length is illegal.');\r\n  }\r\n  return [min, max];\r\n};\r\n\r\n/**\r\n * 解析range规则的参数\r\n * @param {String} paramString\r\n * @return {Array} params\r\n * @throws {TypeError} 'The parameters for range is illegal.'\r\n * TODO: 类似length规则\r\n */\r\nutils.getRangeParams = function(paramString) {\r\n  var errorString = 'The parameters for range is illegal.';\r\n  paramString = paramString[0];\r\n  var matcher = /\\s*([\\(\\[])\\s*((0|([\\+\\-]?[1-9]\\d*))(\\.[0-9]+)?)?\\s*,\\s*((0|([\\+\\-]?[1-9]\\d*))(\\.[0-9]+)?)?\\s*([\\)\\]])\\s*/; // 如果没有最小限制，最小限制为负无穷；如果没有最大限制，最大限制为正无穷\r\n  var result = paramString.match(matcher);\r\n  if (result === null) {\r\n    throw new TypeError(errorString);\r\n  }\r\n  var min = result[2], max = result[6], leftEqual, rightEqual;\r\n  if (typeof min === 'undefined') {\r\n    min = -Infinity;\r\n  } else {\r\n    min = +min;\r\n  }\r\n  leftEqual = result[1] === '[';\r\n  if (typeof max === 'undefined') {\r\n    max = Infinity;\r\n  } else {\r\n    max = +max;\r\n  }\r\n  rightEqual = result[10] === ']';\r\n  return [leftEqual, min, max, rightEqual];\r\n};\r\n\r\n/**\r\n * Utils: Get Object Type\r\n * @param {Object} obj\r\n * @return {String} object type\r\n */\r\nutils.type = function(obj) {\r\n  return objectType.call(obj);\r\n};\r\n\r\n// Object Type Const String\r\nutils.TYPE_STRING = '[object String]';\r\nutils.TYPE_ARRAY = '[object Array]';\r\nutils.TYPE_FUNCTION = '[object Function]';\r\nutils.TYPE_REGEXP = '[object RegExp]';\r\n\n/**\r\n * @constructor\r\n * @class Validator\r\n * @param {Array|Object} validations\r\n */\r\nvar Validator = function(validations) {\r\n  this.checkers = {};\r\n\r\n  validations = validations || [];\r\n\r\n  this.validations = [];\r\n  if (!utils.isArray(validations)) {\r\n    validations = [validations];\r\n  }\r\n  for (var i = 0, len = validations.length; i < len; ++i) {\r\n    var fields = validations[i].field;\r\n    if (!utils.isArray(fields)) {\r\n      fields = [fields];\r\n    }\r\n    var $field = [];\r\n    for (var j = 0; j < fields.length; ++j) {\r\n      $field.push(this.$form.querySelectorAll('[name=' + fields[j] + ']')[0]);\r\n    }\r\n    var rules = validations[i].rules;\r\n    rules = utils.isArray(rules) ? rules : [rules];\r\n    this.validations.push({\r\n      $field: $field,\r\n      rules: rules\r\n    });\r\n  }\r\n};\r\n\r\nvar vprtt = Validator.prototype;\r\n\r\n/**\r\n * @method .add(rules)\r\n * 添加自定义规则\r\n * @param {Object} rules\r\n * @return this\r\n */\r\nvprtt.add = function(rules) {\r\n  function setRule(rule) {\r\n    switch (utils.type(rule.rule)) {\r\n      case utils.TYPE_FUNCTION:\r\n        this.checkers[rule.name] = rule.rule;\r\n        break;\r\n      case utils.TYPE_STRING:\r\n        this.checkers[rule.name] = function() {\r\n        };\r\n        break;\r\n      case utils.TYPE_REGEXP:\r\n        this.checkers[rule.name] = function(values) {\r\n          var pass = true;\r\n          if (utils.isArray(values)) {\r\n            for (var i = 0, len = values.length; i < len; ++i) {\r\n              if (!rule.rule.test(values[i])) {\r\n                pass = false;\r\n                break;\r\n              }\r\n            }\r\n          } else {\r\n            if (!rule.rule.test(values)) {\r\n              pass = false;\r\n            }\r\n          }\r\n          return pass;\r\n        };\r\n        break;\r\n      default:\r\n        throw new TypeError('Rule type not support.');\r\n    }\r\n  }\r\n  if (utils.isArray(rules)) {\r\n    for (var i = 0, len = rules.length; i < len; ++i) {\r\n      setRule.call(this, rules[i]);\r\n    }\r\n  } else {\r\n    setRule.call(this, rules);\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * @method .check()\r\n * @return {Boolean} pass or not\r\n */\r\nvprtt.check = function() {\r\n  return this;\r\n};\r\n\r\n/**\r\n * @method .remove(rules)\r\n * 移除自定义规则\r\n * @param {Array|String} rules\r\n * @return this\r\n */\r\nvprtt.remove = function(rules) {\r\n  function removeRule(rule) {\r\n    if (typeof this.checkers[rule] !== 'undefined') {\r\n      delete this.checkers[rule];\r\n    }\r\n  }\r\n  if (utils.isArray(rules)) {\r\n    for (var i = 0, len = rules.length; i < len; ++i) {\r\n      removeRule(rules[i]);\r\n    }\r\n  } else {\r\n    removeRule(rules);\r\n  }\r\n  return this;\r\n};\r\n\nvar defaults = {};\r\n\r\n// checker函数的第一个参数总是一个数组，这个数组就是待检测的字符串数组\r\n// 从第二个参数起，每个checker函数带有不同长度的参数列表。例如，empty函数的参数列表长度为0，long函数的参数列表长度为2（暂时，有待改进）\r\ndefaults.checkers = {};\r\n\r\ndefaults.matchers = {\r\n  ////////// 正则匹配\r\n  url: /^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$/\r\n  , email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i\r\n  , number: /^(0|([\\+\\-]?[1-9]\\d*))(\\.[0-9]+)?$/\r\n  , int: /^(0|([\\+\\-]?[1-9]\\d*))$/\r\n  // 正整数\r\n  , positive: /^\\+?[1-9]\\d*$/\r\n  // 负整数\r\n  , negative: /^\\-[1-9]\\d*$/\r\n  // 变量名：只能包含英文字母/数字/下划线，且不能以数字开头\r\n  , varName: /^[a-zA-Z_][a-zA-Z0-9_]*$/\r\n  // 昵称：只能包含中文/英文字母/数字/下划线，且不能以数字开头\r\n  , nickName: /^[\\u4E00-\\u9FA5\\uF900-\\uFA2Da-zA-Z_][\\u4E00-\\u9FA5\\uF900-\\uFA2Da-zA-Z0-9_]*$/\r\n  // QQ\r\n  , QQ: /^[1-9][0-9]{4,}$/\r\n  // 身份证号\r\n  // 手机号\r\n  // 电话号码\r\n  // 邮政编码\r\n  // IP\r\n  // IPV4\r\n  // IPV6\r\n  // 全大写\r\n  , upperCase: /^[A-Z]+$/g\r\n  // 全小写\r\n  , lowerCase: /^[a-z]$/g\r\n  ////////// 非正则匹配\r\n  // 空限制\r\n  , empty: empty\r\n  // 相等\r\n  , equal: equal\r\n  // 长度范围限制\r\n  , long: long\r\n  // 数值大小限制\r\n  , range: range\r\n};\r\n\r\n/**\r\n * 判断值是否为空\r\n * @param {Object} value\r\n * 如果value为null|undefined|空字符串，就判断为真，否则判断为假\r\n * @return {Boolean} 是否为空\r\n */\r\nfunction isEmpty(value) {\r\n  return value === null || typeof value === 'undefined' || value === '';\r\n}\r\n\r\n/**\r\n * defaults.checkers: equal check\r\n * @param {Array} values\r\n * @return {Boolean} equal or not\r\n */\r\nfunction equal(values) {\r\n  var equal = true;\r\n  for (var i = 0, len = values.length; i < len - 1; ++i) {\r\n    if (values[i] !== values[i+1]) {\r\n      equal = false;\r\n      break;\r\n    }\r\n  }\r\n  return equal;\r\n}\r\n\r\n/**\r\n * defaults.checkers: empty check\r\n * @param {Array} values\r\n * @return {Boolean} yes or no\r\n */\r\nfunction empty(values) {\r\n  var pass = true;\r\n  for (var i = 0, len = values.length; i < len; ++i) {\r\n    if (!isEmpty(values[i])) {\r\n      pass = false;\r\n      break;\r\n    }\r\n  }\r\n  return pass;\r\n};\r\n\r\n/**\r\n * defaults.checkers: length check\r\n * @param {Array} values\r\n * @param {Number} min\r\n * @param {Number} max\r\n * @return {Boolean} yes or no\r\n */\r\nfunction long(values, min, max) {\r\n  var pass = true;\r\n  for (var i = 0, len = values.length; i < len; ++i) {\r\n    var length = values[i].length;\r\n    if (length < min || length > max) {\r\n      pass = false;\r\n      break;\r\n    }\r\n  }\r\n  return pass;\r\n};\r\n\r\n/**\r\n * defaults.check: number range check\r\n * 这个函数和long类似，但是不是用来限制长度的，而是用来限制数值本身的\r\n * @param {Array} values\r\n * @param {Boolean} leftEqual 是否大于等于\r\n * @param {Number} min\r\n * @param {Number} max\r\n * @param {Boolean} rightEqual 是否小于等于\r\n * @return {Boolean} yes or no\r\n */\r\nfunction range(values, leftEqual, min, max, rightEqual) {\r\n  var pass = true;\r\n  for (var i = 0, len = values.length; i < len; ++i) {\r\n    var value = values[i];\r\n    if (leftEqual && value < min || rightEqual && value > max || !leftEqual && value <= min || !rightEqual && value >= max) {\r\n      pass = false;\r\n      break;\r\n    }\r\n  }\r\n  return pass;\r\n};\r\n\n/**\r\n * @static Validator.is\r\n * 优先级： api.checkers > defaults.checkers\r\n * @param {String} ruleName\r\n * @param {String} value\r\n * @return {Boolean} is or not\r\n */\r\nvar is = Validator.is = function(ruleName, value) {\r\n  var checker = api.checkers[ruleName] || defaults.checkers[ruleName];\r\n  if (!utils.isFunction(checker)) {\r\n    throw new TypeError('Checker for ' + ruleName + ' is not defined.');\r\n  }\r\n  return checker(value);\r\n};\r\n\r\n/**\r\n * @static Validator.not\r\n * @param {String} ruleName\r\n * @param {String} testString\r\n * @return {Boolean} is or not\r\n */\r\nvar not = Validator.not = function(ruleName, value) {\r\n  var checker = api.checkers[ruleName] || defaults.checkers[ruleName];\r\n  if (!utils.isFunction(checker)) {\r\n    throw new TypeError('Checker for ' + ruleName + ' is not defined.');\r\n  }\r\n  return function(value) {\r\n    return !checker(value);\r\n  };\r\n};\r\n\r\n/**\r\n * This helper helps to regist default checkers, `is` api and `not` api\r\n * @param {String} name\r\n * @param {Object} matcher\r\n */\r\nfunction registDefaultCheckers(name, matcher) {\r\n  var callback;\r\n  switch(utils.type(matcher)) {\r\n    case utils.TYPE_REGEXP:\r\n      callback = function(value) {\r\n        return matcher.test(value);\r\n      };\r\n      break;\r\n    case utils.TYPE_FUNCTION:\r\n      callback = matcher;\r\n      break;\r\n    default:\r\n      throw new TypeError('Matcher Type Error.');\r\n  }\r\n  defaults.checkers[name] = callback;\r\n  is[name] = callback;\r\n  not[name] = function() {\r\n    return callback.apply(null, arguments);\r\n  };\r\n}\r\n\r\nfor (var m in defaults.matchers) {\r\n  if (defaults.matchers.hasOwnProperty(m)) {\r\n    registDefaultCheckers(m, defaults.matchers[m]);\r\n  }\r\n}\r\n\r\nvar api = {};\r\n\r\napi.checkers = {};\r\n\r\n/**\r\n * @static Validator.api(type, apiName, checker)\r\n * TODO: 修改参数列表，只接收一个参数\r\n * @param {Array|Object} rules\r\n * @return Validator\r\n */\r\nValidator.api = function(rules) {\r\n\r\n  /**\r\n   * @param {String} type\r\n   * @param {String|RegExp|Function} checker\r\n   * checker可以是字符串，正则表达式，或者函数\r\n   * 当checker是字符串时，表示基于内建的规则添加的新规则（其实完全可以用内建规则实现）\r\n   * 当checker是正则表达式时，表示一条通过该正则表达式测试的规则\r\n   * 当checker是函数时，该函数的返回值必须是布尔\r\n   * This function may throw a `TypeError` if checker's type is not support.\r\n   */\r\n  function registApiChecker(type, checker) {\r\n    var _type = utils.type(checker);\r\n    var callback;\r\n    switch(_type) {\r\n      case utils.TYPE_STRING:\r\n        var parts = checker.split(':');\r\n        var _checker = defaults.checkers[parts[0]];\r\n        if (typeof _checker === 'undefined') {\r\n          throw new TypeError('Checker ' + parts[0] + ' is not defined.');\r\n        }\r\n        callback = function(value) {\r\n          return _checker.call(this, parts.slice(1));\r\n        };\r\n        break;\r\n      case utils.TYPE_REGEXP:\r\n        callback = function(value) {\r\n          return checker.test(value);\r\n        }\r\n        break;\r\n      case utils.TYPE_FUNCTION:\r\n        callback = checker;\r\n        break;\r\n      default:\r\n        throw new TypeError('Checker must be a String/RegExp/Function.');\r\n    }\r\n    api[type] = callback;\r\n  }\r\n\r\n  if (utils.isArray(rules)) {\r\n    for (var i = 0, len = rules.length; i < len; ++i) {\r\n      registApiChecker(rules[i]);\r\n    }\r\n  } else {\r\n    registApiChecker(rules);\r\n  }\r\n\r\n  return Validator;\r\n};\r\n\n/**\n * @static Validator.extends()\n */\nValidator.extend = function(constructorFunction) {\n\n  constructorFunction.prototype = new Validator();\n  constructorFunction.prototype.constructor = constructorFunction;\n\n  return constructorFunction;\n\n};\n\n/**\r\n * @constructor\r\n * @class FormValidator\r\n * @extends Validator\r\n * @param {HTMLElement|String} formOrSelector\r\n * @param {Object|Array} validations\r\n */\r\nvar FormValidator = Validator.extend(function(formOrSelector, validations) {\r\n  if (typeof formOrSelector === 'string') {\r\n    this.$form = document.querySelectorAll(formOrSelector)[0]; // TODO: querySelectorAll兼容性\r\n  } else {\r\n    this.$form = formOrSelector;\r\n  }\r\n  this.validations = [];\r\n  if (!utils.isArray(validations)) {\r\n    validations = [validations];\r\n  }\r\n  for (var i = 0, len = validations.length; i < len; ++i) {\r\n    var fields = validations[i].field;\r\n    if (!utils.isArray(fields)) {\r\n      fields = [fields];\r\n    }\r\n    var $field = [];\r\n    for (var j = 0; j < fields.length; ++j) {\r\n      $field.push(this.$form.querySelectorAll('[name=' + fields[j] + ']')[0]); // TODO: querySelectorAll兼容性\r\n    }\r\n    var rules = validations[i].rules;\r\n    rules = utils.isArray(rules) ? rules : [rules];\r\n    this.validations.push({\r\n      $field: $field,\r\n      rules: rules\r\n    });\r\n  }\r\n});\r\n\r\n/**\r\n * getChecker\r\n * 优先级：this.checkers > api.checkers > defaults.checkers\r\n * @param {String} type\r\n * @return {Array} [checkerFunction, params]\r\n */\r\nfunction getChecker(type) {\r\n  var parts = type.split(':');\r\n  type = parts[0].replace(/length/i, 'long');\r\n  var checker = this.checkers[type] || api.checkers[type] || defaults.checkers[type];\r\n  if (!utils.isFunction(checker)) {\r\n    throw new TypeError('Checker for rule ' + parts[0] + ' must be a Function.');\r\n  }\r\n  var params;\r\n  var _params = parts.slice(1);\r\n  switch (type) {\r\n    case 'long':\r\n      params = utils.getLengthParams(_params);\r\n      break;\r\n    case 'range':\r\n      params = utils.getRangeParams(_params);\r\n      break;\r\n    default:\r\n      params = _params;\r\n  }\r\n  return [checker, params];\r\n};\r\n\r\n/**\r\n * @method .check()\r\n * @override Validator.prototype.check()\r\n * @return {Boolean} pass or not\r\n * TODO:增加对取反符号`!`的支持\r\n */\r\nFormValidator.prototype.check = function() {\r\n  var $form = this.$form;\r\n  var validations = this.validations;\r\n  var pass = true;\r\n  for (var i = 0, len = validations.length; i < len; ++i) {\r\n    var $field = validations[i].$field;\r\n    var rules = validations[i].rules;\r\n    for (var j = 0; j < rules.length; ++j) {\r\n      var rule = rules[j];\r\n      var not = rule.type[0] === '!';\r\n      var ruleType = not ? rule.type.slice(1) : rule.type;\r\n      var checker = getChecker.call(this, ruleType);\r\n      var values  = [];\r\n      for (var k = 0; k < $field.length; ++k) {\r\n        values.push(utils.getValue($field[k]));\r\n      }\r\n      checker[1].unshift(values);\r\n      var result = checker[0].apply(null, checker[1]);\r\n      if (not && result || !not && !result) {\r\n\r\n        var context = $field.length < 2 ? $field[0] : $field;\r\n        rule.fail.call(context, $form);\r\n        pass = false;\r\n        break;\r\n      }\r\n    }\r\n    if (!pass) break;\r\n  }\r\n  return pass;\r\n};\r\n\n\r\nexports.Validator = Validator;\r\n\r\nexports.FormValidator = FormValidator;\r\n\r\n}));\r\n"],"sourceRoot":"/source/"}